eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"offcourse/adapters/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // import DS from \'ember-data\';\n\n    // export default DS.RESTAdapter.extend({\n    // });\n    __exports__[\"default\"] = EmberPouch.Adapter.extend({\n      db: new PouchDB(\'offcoursedb\')\n    });\n  });//# sourceURL=offcourse/adapters/application.js");

;eval("define(\"offcourse/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=offcourse/app.js");

;eval("define(\"offcourse/components/post-details\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    	// createTime: function(){\n    	// 	debugger;\n    	// }.property(\'post.created_at\')\n    });\n  });//# sourceURL=offcourse/components/post-details.js");

;eval("define(\"offcourse/components/select-2\", \n  [\"ember-select-2/components/select-2\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /*\n    	This is just a proxy file requiring the component from the /addon folder and\n    	making it available to the dummy application!\n     */\n    var Select2Component = __dependency1__[\"default\"];\n     \n    __exports__[\"default\"] = Select2Component;\n  });//# sourceURL=offcourse/components/select-2.js");

;eval("define(\"offcourse/components/summary-topic-list-item\", \n  [\"ember\",\"offcourse/models/topic\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Topic = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: [\'multiselect-checkbox-option\', \'list-group-item\'],\n\n      tagName: \'li\',\n\n      value: null,\n\n      selection: [],\n\n      labelProperty: null,\n\n\n      // click: function(){\n      // 	// debugger;\n      // },\n\n      isSelected: function() {\n        return this.get(\'selection\').contains(this.get(\'value\'));\n      }.property(\'value\', \'selection\'),\n\n      url: function(){\n        var url = this.get(\'parentView.siteDetails.base_url\') + \"/t/\" + this.get(\'value.id\');\n        return url;\n      }.property(\'value\'),\n      // label: function() {\n      //   debugger;\n      //   var labelProperty = this.get(\'labelProperty\');\n      //   var value = this.get(\'value\');\n\n      //   if (labelProperty) {\n      //     if (typeof value.get === \'function\') {\n      //       return value.get(labelProperty);\n      //     } else {\n      //       return value[labelProperty];\n      //     }\n      //   } else {\n      //     return String(value);\n      //   }\n      // }.property(\'value\', \'labelProperty\'),\n\n      isSelectedChanged: function() {\n        if (this.get(\'isSelected\') && !this.get(\'selection\').contains(this.get(\'value\'))) {\n          this.get(\'selection\').addObject(this.get(\'value\'));\n        } else {\n          this.get(\'selection\').removeObject(this.get(\'value\'));\n        }\n      }.observes(\'isSelected\')\n    });\n  });//# sourceURL=offcourse/components/summary-topic-list-item.js");

;eval("define(\"offcourse/models/topic\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var Topic = DS.Model.extend({\n      // primaryKey: \'id\',\n      // id: DS.attr(\'string\'),\n      originalId: DS.attr(\'string\'),\n      sourceSiteId: DS.attr(\'string\'),\n      title: DS.attr(\'string\'),\n      post_stream: DS.attr(\'raw\'),\n      rev: DS.attr(\'string\')\n    });\n\n    Topic.reopenClass({\n      getTopicDetailsApiUrl: function(TopicId, targetDiscourseUrl) {\n        var url = \"/t/\" + TopicId + \".json\";\n        if (targetDiscourseUrl) {\n          url = \"/remote_discourse/topic_details.json?topic_id=\" + TopicId + \"&host=\" + targetDiscourseUrl;\n        }\n        return url;\n      },\n      findOrCreate: function(store, type, properties) {\n        return store.find(type, properties.id).then(null, (function(_this) {\n          return function(reason) {\n            var record;\n            // if (reason.status === 404) {\n              record = store.recordForId(type, properties.id);\n              record.loadedData();\n              record.setProperties(properties);\n              return record.save();\n            // } else {\n            //   throw reason;\n            // }\n          };\n        })(this));\n      }\n    });\n\n    __exports__[\"default\"] = Topic;\n  });//# sourceURL=offcourse/models/topic.js");

;eval("define(\"offcourse/components/summary-topic-list\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: [\'multiselect-checkboxes\', \'list-group\'],\n\n      tagName: \'ul\',\n      \n      options: null,\n\n      selection: null,\n\n      labelProperty: null,\n\n      actions: {\n        previewTopic: function(topic) {\n          this.sendAction(\'previewTopicAction\', topic)\n        }\n      },\n    });\n  });//# sourceURL=offcourse/components/summary-topic-list.js");

;eval("define(\"offcourse/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      // http://stackoverflow.com/questions/22122570/ember-js-network-connectivity-check-at-startup-and-listener\n\n      networkIsOnline: false, // assume we\'re offline until proven wrong\n      init: function() {\n        this.updateNetworkStatus();\n      },\n\n      updateNetworkStatus: function() {\n        var appController = this;\n        // if (!navigator.onLine) {\n        //   this.set(\'isOnline\', false);\n        //   return; // return early, no point in pinging the server if we have no LAN\n        // }\n        Ember.$.get(\'https://cors-test.appspot.com/test\').done(function(result) {\n          if (result.status === \"ok\") {\n            appController.set(\'networkIsOnline\', true);\n          } else {\n            debugger;\n          }\n        }).fail(function(result) {\n          appController.set(\'networkIsOnline\', false);\n        }).always(function() {\n          Ember.run.later(appController, \'updateNetworkStatus\', 60000);\n        });\n      },\n\n      navigatorIsOnline: function() {\n        if (navigator.onLine) {\n          return true;\n        } else {\n          return false;\n        }\n      }.property()\n\n    });\n  });//# sourceURL=offcourse/controllers/application.js");

;eval("define(\"offcourse/controllers/categories\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    	needs: [\'Application\'],\n\n      // will set below in categories route as I won\'t have this value available in model hook\n      // on first load\n    	// currentSourceUrl: \"http://klavado.com\"\n\n      currentSiteChanged: function(){\n      	debugger;\n      }.observes(\'domainUrl\')\n\n    	// offlineTopicsCount: function() {\n    	// 	// debugger;\n     //    var topics = this.store.find(\'topic\');\n     //    topics.then(function(res) {\n     //    	// debugger;\n     //    	return 4;\n     //    });\n\n    	// 	return topics;\n    	// }.property()\n    });\n  });//# sourceURL=offcourse/controllers/categories.js");

;eval("define(\"offcourse/controllers/modal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ModalController;\n\n    ModalController = Ember.ObjectController.extend({\n      actions: {\n        cancel: function() {\n          if (this.content) {\n            this.content.rollback();\n          }\n          return this.send(\'closeModal\');\n        }\n      }\n    });\n\n    __exports__[\"default\"] = ModalController;\n  });//# sourceURL=offcourse/controllers/modal.js");

;eval("define(\"offcourse/controllers/modal/topic\", \n  [\"offcourse/controllers/modal\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ModalController = __dependency1__[\"default\"];\n    var ConfirmationNewController;\n\n    ConfirmationNewController = ModalController.extend({\n      actions: {\n        confirm: function() {\n          alert(\'OK, it will be done!\');\n          return this.send(\'closeModal\');\n        }\n      }\n    });\n\n    __exports__[\"default\"] = ConfirmationNewController;\n  });//# sourceURL=offcourse/controllers/modal/topic.js");

;eval("define(\"offcourse/controllers/retriever\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    	// needs: [\'retriever/site\'],\n    	// above does not work\n      currentSiteChanged: function() {\n        if (this.get(\'currentSite.slug\') && this.get(\'currentSiteInitialised\')) {\n          this.transitionToRoute(\'retriever.site\', this.get(\'currentSite.slug\'));\n        }else{\n    // using setting below to ensure I don\'t redirect when currentSite is set from route param\n    // should only redirect when changed from dropdown\n        	this.set(\'currentSiteInitialised\', true);\n        };\n      }.observes(\'currentSite\'),\n      faviconUrl: function(){\n      	return this.get(\'currentSite.base_url\') + \'/favicon.ico\'\n      }.property(\'currentSite\')\n\n    });\n  });//# sourceURL=offcourse/controllers/retriever.js");

;eval("define(\"offcourse/controllers/topics\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    	needs: [\'Application\'],\n    	noOfflineTopics: function(){\n    		var model = this.get(\'model\');\n    		if (model.content && model.content.length > 0) {\n    			return false;\n    		} else{\n    			return true;\n    		};\n    	}.property(\'model\')\n    });\n  });//# sourceURL=offcourse/controllers/topics.js");

;eval("define(\"offcourse/initializers/ember-moment\", \n  [\"ember-moment/helpers/moment\",\"ember-moment/helpers/ago\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var moment = __dependency1__.moment;\n    var ago = __dependency2__.ago;\n    var Ember = __dependency3__[\"default\"];\n\n    var initialize = function(/* container, app */) {\n      Ember.Handlebars.helper(\'moment\', moment);\n      Ember.Handlebars.helper(\'ago\', ago);\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'ember-moment\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=offcourse/initializers/ember-moment.js");

;eval("define(\"offcourse/initializers/export-application-global\", \n  [\"ember\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=offcourse/initializers/export-application-global.js");

;eval("define(\"offcourse/models/category\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var Category = DS.Model.extend({\n\n    });\n\n    Category.reopenClass({\n      getIndexApiUrl: function(targetDiscourseUrl) {\n        var url = \"/categories.json\";\n        if (targetDiscourseUrl) {\n          url = \"/remote_discourse/categories.json?host=\" + targetDiscourseUrl;\n        } \n        return url;\n      },\n      getTopicListApiUrl: function(categorySlug, targetDiscourseUrl) {\n        var url = \"/c/\" + categorySlug + \".json\";\n        if (targetDiscourseUrl) {\n          url = \"/remote_discourse/topics_per_category.json?category=\" + categorySlug + \"&host=\" + targetDiscourseUrl;\n        } \n        return url;\n      }\n    });\n\n    __exports__[\"default\"] = Category;\n  });//# sourceURL=offcourse/models/category.js");

;eval("define(\"offcourse/models/pouch_topic\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    // import PouchPost from \'./pouch_post\';\n\n    var PouchTopic = DS.Model.extend({\n      // primaryKey: \'id\',\n      // id: DS.attr(\'string\'),\n      originalId: DS.attr(\'string\'),\n      sourceSiteId: DS.attr(\'string\'),\n      title: DS.attr(\'string\'),\n      post_stream: DS.attr(\'raw\'),\n      rev: DS.attr(\'string\'),\n      posts: function(){\n        return this.get(\'post_stream.posts\').map(function(post){\n          return Em.Object.create(post);\n        })\n        // debugger;\n      }.property(\'post_stream.posts\')\n    });\n\n    PouchTopic.reopenClass({\n      getTopicDetailsApiUrl: function(TopicId, targetDiscourseUrl) {\n        var url = \"/t/\" + TopicId + \".json\";\n        if (targetDiscourseUrl) {\n          url = \"/remote_discourse/topic_details.json?topic_id=\" + TopicId + \"&host=\" + targetDiscourseUrl;\n        }\n        return url;\n      },\n      findOrCreate: function(store, type, properties) {\n        return store.find(type, properties.id).then(null, (function(_this) {\n          return function(reason) {\n            var record;\n            // if (reason.status === 404) {\n              record = store.recordForId(type, properties.id);\n              record.loadedData();\n              record.setProperties(properties);\n              return record.save();\n            // } else {\n            //   throw reason;\n            // }\n          };\n        })(this));\n      }\n    });\n\n    __exports__[\"default\"] = PouchTopic;\n  });//# sourceURL=offcourse/models/pouch_topic.js");

;eval("define(\"offcourse/models/site\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var Site = DS.Model.extend({\n      title: DS.attr(\'string\'),\n\n      display_name: DS.attr(\'string\'),\n      description: DS.attr(\'string\'),\n      slug: DS.attr(\'string\'),\n      base_url: DS.attr(\'string\'),\n\n      url: DS.attr(\'string\'),\n      isActive: DS.attr(\'boolean\'),\n      rev: DS.attr(\'string\')\n    });\n\n    Site.reopenClass({\n      getSiteDetailsApiUrl: function(SiteId, targetDiscourseUrl) {\n        var url = \"/remote_discourse/get_or_add_site.json?host=https://meta.discourse.org\"\n        // if (targetDiscourseUrl) {\n        //   url = \"/remote_discourse/Site_details.json?Site_id=\" + SiteId + \"&host=\" + targetDiscourseUrl;\n        // }\n        return url;\n      }\n    });\n\n    __exports__[\"default\"] = Site;\n  });//# sourceURL=offcourse/models/site.js");

;eval("define(\"offcourse/router\", \n  [\"ember\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'sites\', {\n        path: \'/sites\'\n      }, function() {\n        this.resource(\'sites.site\', {\n          path: \'/:slug\'\n        }, function() {\n\n          this.route(\'default\', {\n            path: \'/\'\n          });\n        });\n      });\n\n\n      this.resource(\'retriever\', {\n        path: \'/fetch\'\n      }, function() {\n        this.route(\'default\', {\n          path: \'/\'\n        });\n        this.resource(\'retriever.site\', {\n          path: \'/:slug\'\n        }, function() {\n          this.route(\'default\', {\n            path: \'/\'\n          });\n          this.resource(\'retriever.site.category\', {\n              path: \'/:category_slug/page/:page_number\'\n            }\n            // , function() {\n            //   this.route(\'default\', {\n            //     path: \'/\'\n            //   });\n            //   this.route(\'page\', {\n            //     path: \'/page/:page_number\'\n            //   });\n            // }\n          );\n        });\n      });\n\n      // this.resource(\'categories\', {\n      //   path: \'/retrieve/cats\'\n      // }, function() {\n      //   this.route(\'default\', {\n      //     path: \'/\'\n      //   });\n      //   this.resource(\'categories.category\', {\n      //     path: \'/:slug\'\n      //   }, function() {\n      //     this.route(\'default\', {\n      //       path: \'/\'\n      //     });\n      //     this.resource(\'categories.category.topic\', {\n      //       path: \'/:id\'\n      //     }, function() {\n\n      //       this.route(\'default\', {\n      //         path: \'/\'\n      //       });\n      //     });\n      //   });\n      // });\n\n      // this.route(\'categories/category\');\n      // this.route(\'categories/category/topic\');\n      this.resource(\'topics\', {\n        path: \'/offline/topics\'\n      }, function() {\n        this.route(\'default\', {\n          path: \'/\'\n        });\n\n        this.resource(\'topics.topic\', {\n          path: \'/:id\'\n        }, function() {\n\n          this.route(\'default\', {\n            path: \'/\'\n          });\n        });\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=offcourse/router.js");

;eval("define(\"offcourse/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var ApplicationRoute;\n\n    ApplicationRoute = Ember.Route.extend({\n      actions: {\n        openModal: function(modal) {\n          return this.render(modal, {\n            into: \'application\',\n            outlet: \'modal\'\n          });\n        },\n        closeModal: function() {\n          return this.disconnectOutlet({\n            outlet: \'modal\',\n            parentView: \'application\'\n          });\n        }\n      }\n    });\n\n    __exports__[\"default\"] = ApplicationRoute;\n  });//# sourceURL=offcourse/routes/application.js");

;eval("define(\"offcourse/routes/categories\", \n  [\"ember\",\"offcourse/models/category\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Category = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        changeDomain: function() {\n          var targetDiscourseUrl = this.controller.get(\'domainUrl\');\n          var valid = /^(ftp|http|https):\\/\\/[^ \"]+$/.test(targetDiscourseUrl);\n          if (!valid) {\n            // alert(\'Sorry, invalid url\');\n            return;\n          }\n          var domain = targetDiscourseUrl.split(\'/\')[2] || targetDiscourseUrl.split(\'/\')[0];\n          var domainTitle = domain.replace(/\\./g, \' \');\n          var domainId = domain.replace(/\\./g, \'_\');\n\n          this.controller.set(\'currentSourceId\', domainId);\n          // targetDiscourseUrl can be in an invalid state while currentSourceUrl is only set after having been validated\n          this.controller.set(\'currentSourceUrl\', targetDiscourseUrl);\n          var apiUrl = Category.getIndexApiUrl(targetDiscourseUrl);\n          // var url = \"/remote_discourse/categories.json?host=\" + targetDiscourseUrl;\n\n          this.store.createRecord(\'site\', {\n            title: domainTitle,\n            url: targetDiscourseUrl,\n            id: domainId\n          });\n          this.controller.set(\'model\', []);\n          // pouchSite.save().then(function(res){\n          //   debugger;\n          // }.bind(this));\n\n          var that = this;\n          $.getJSON(apiUrl).then(\n            function(response) {\n              that.controller.set(\'model\', response);\n              that.transitionTo(\'categories\');\n            }\n          );\n\n\n        }\n      },\n\n      model: function(params) {\n        // var networkIsOnline = this.controllerFor(\'application\').get(\'networkIsOnline\');\n        // if (!networkIsOnline) {\n        //   this.transitionTo(\'topics\');\n        //   Bootstrap.GNM.push(\'ERROR!\', \'It looks like you are offline\', \'error\');\n\n        // };\n        // above is not a good idea - on first load, network online status might be wrong\n\n        var discourseUrl = this.controllerFor(\'categories\').get(\'currentSourceUrl\');\n        // TODO - use a setting for the default url\n        if (!discourseUrl) {\n          discourseUrl = \"http://klavado.com\";\n          this.controllerFor(\'categories\').set(\'currentSourceUrl\', discourseUrl)\n            // this.set(\'controller.currentSourceUrl\', discourseUrl);\n        };\n        var apiUrl = Category.getIndexApiUrl(discourseUrl);\n\n        var result = $.getJSON(apiUrl).then(\n          function(response) {\n            return response;\n          }\n        );\n        return result;\n      },\n\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n        var topics = this.store.find(\'topic\');\n        topics.then(function(res) {\n          this.controller.set(\'offlineTopicsCount\', res.content.length);\n        }.bind(this));\n\n        var apiUrl = \"/remote_discourse/get_sites.json\";\n        $.getJSON(apiUrl).then(\n          function(response) {\n            var sites = [];\n            response.forEach(function(site){\n              site.text = site.base_url;\n              sites.push(site);\n            })\n            this.controller.set(\'sites\', sites);\n\n          }.bind(this));\n      }\n    });\n  });//# sourceURL=offcourse/routes/categories.js");

;eval("define(\"offcourse/routes/categories/category\", \n  [\"ember\",\"offcourse/models/category\",\"offcourse/models/topic\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Category = __dependency2__[\"default\"];\n    var Topic = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        saveTopicsOffline: function() {\n          var categoriesController = this.controllerFor(\'categories\');\n          var domainUrl = categoriesController.get(\'currentSourceUrl\');\n          var domainId = categoriesController.get(\'currentSourceId\') || \"klavado\";\n          var selectedTopics = this.controller.get(\'selectedTopics\');\n          if (!selectedTopics || selectedTopics.length < 1) {\n            Bootstrap.GNM.push(\'ERROR!\', \'Please select topics to save\', \'error\');\n          } else {\n            // TODO - actually ensure topis are saved before showing this\n            Bootstrap.GNM.push(\'SUCCESS!\', \'Selected topics added\', \'success\');\n          };\n          selectedTopics.forEach(function(topic) {\n\n            var apiUrl = Topic.getTopicDetailsApiUrl(topic.id, domainUrl);\n            var that = this;\n            var result = $.getJSON(apiUrl).then(\n              function(detailedTopic) {\n                // debugger;\n                var namespacedId = domainId + \"_\" + detailedTopic.id;\n\n                var topicProperties = {\n                  title: detailedTopic.title,\n                  post_stream: detailedTopic.post_stream,\n                  originalId: detailedTopic.id,\n                  sourceSiteId: domainId,\n                  id: namespacedId\n                };\n\n                Topic.findOrCreate(that.store, \'topic\', topicProperties);\n              }\n            );\n\n          }.bind(this));\n\n        },\n        error: function(error, transition) {\n          if (error && error.status === 404) {\n            // error substate and parent routes do not handle this error\n            return this.transitionTo(\'categories\');\n          }\n          // Return true to bubble this event to any parent route.\n          return false;\n        }\n      },\n      model: function(params) {\n        var currentSourceUrl = this.controllerFor(\'categories\').get(\'currentSourceUrl\');\n        var apiUrl = Category.getTopicListApiUrl(params.slug, currentSourceUrl);\n\n        var result = $.getJSON(apiUrl).then(\n          function(response) {\n            response.category_slug = params.slug;\n            return response;\n          },\n          function(error) {\n            return error;\n          }\n        );\n        return result;\n      },\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n        controller.set(\'selectedTopics\', []);\n      }\n\n\n    });\n  });//# sourceURL=offcourse/routes/categories/category.js");

;eval("define(\"offcourse/routes/categories/category/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        // saveOffline: function() {\n        //   var store = this.store;\n        //   var model = this.controller.get(\'model\');\n        //   var topic = store.createRecord(\'topic\', {\n        //     title: model.title,\n        //     post_stream: model.post_stream,\n        //     id: model.id\n        //   });\n        //   topic.save();\n\n        // },\n        // retrieveFromPouchDb: function() {\n        //   var model_id = this.controller.get(\'model.id\');\n        //   var topic = this.store.find(\'topic\', model_id);\n        //   topic.then(function(res){\n        //   });\n        //   var topics = this.store.find(\'topic\');\n        //   topics.then(function(res){\n        //   });\n\n        // }\n      },\n\n      model: function(params) {\n        var url = \"/t/\" + params.id + \".json\";\n        var result = $.getJSON(url).then(\n          function(response) {\n            return response;\n          }\n        );\n        return result;\n      },\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n        var categoryController = this.controllerFor(\'categories.category\');\n        categoryController.set(\'isTopicView\', true);\n        controller.set(\'category_slug\', categoryController.get(\'model.category_slug\'));\n      },\n      deactivate: function() {\n        var categoryController = this.controllerFor(\'categories.category\');\n        categoryController.set(\'isTopicView\', false);\n      }\n\n\n    });\n  });//# sourceURL=offcourse/routes/categories/category/topic.js");

;eval("define(\"offcourse/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      beforeModel: function() {\n        this.transitionTo(\'topics\');\n      }\n\n    });\n  });//# sourceURL=offcourse/routes/index.js");

;eval("define(\"offcourse/routes/retriever\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    // import Category from \'../models/category\';\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        addSite: function() {\n          var targetDiscourseUrl = this.controller.get(\'newSiteUrl\');\n          var valid = /^(ftp|http|https):\\/\\/[^ \"]+$/.test(targetDiscourseUrl);\n          if (!valid) {\n            alert(\'Sorry, invalid url\');\n            return;\n          }\n          // var domain = targetDiscourseUrl.split(\'/\')[2] || targetDiscourseUrl.split(\'/\')[0];\n          // var domainId = domain.replace(/\\./g, \'_\');\n          // only use slug instead of host if I\'m sure site is in db\n          var apiUrl = \"/remote_discourse/get_or_add_site.json?host=\" + targetDiscourseUrl;\n          $.getJSON(apiUrl).then(\n            function(response) {\n              var site = this.store.createRecord(\'site\', {\n                display_name: response.display_name,\n                description: response.description,\n                slug: response.slug,\n                base_url: response.base_url\n              });\n              site.save();\n              response.text = response.base_url;\n              // have to do above as select2 dropdown requires text field\n              this.controller.model.pushObject(response);\n              this.controller.set(\'currentSite\', response);\n            }.bind(this)\n          );\n\n        }\n      },\n\n      model: function() {\n        var apiUrl = \"/remote_discourse/get_sites.json\";\n        var sites = $.getJSON(apiUrl).then(\n          function(response) {\n            var sitesArray = [];\n            response.forEach(function(site) {\n              site.text = site.base_url;\n              // have to do above as select2 dropdown requires text field\n              sitesArray.push(site);\n            });\n            return sitesArray;\n          }.bind(this));\n        return sites;\n      },\n\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n      }\n    });\n  });//# sourceURL=offcourse/routes/retriever.js");

;eval("define(\"offcourse/routes/retriever/default\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    // import Category from \'../../models/category\';\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n\n      },\n\n      beforeModel: function(params) {\n        var sitesModel = this.modelFor(\'retriever\');\n        var siteModel = sitesModel[0];\n        if (siteModel) {\n        	this.transitionTo(\'retriever.site\', siteModel.slug);\n        };\n      }\n    });\n  });//# sourceURL=offcourse/routes/retriever/default.js");

;eval("define(\"offcourse/routes/retriever/site\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    // import Category from \'../../models/category\';\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n\n      },\n\n      model: function(params) {\n        // var sitesModel = this.modelFor(\'retriever\');\n        // var siteDetails = {\n        //   site: sitesModel.findBy(\'slug\', params.slug)\n        // }\n        var apiUrl = \"/remote_discourse/categories.json?slug=\" + params.slug;\n        var result = $.getJSON(apiUrl).then(\n          function(response) {\n            // console.log(this.siteDetails);\n            // can\'t figure out how to get at siteDetails from here\n            return response;\n          }.bind(this)\n        );\n        return result;\n\n      },\n\n      setupController: function(controller, model) {\n        // debugger;\n        controller.set(\'model\', model);\n        var sitesModel = this.modelFor(\'retriever\');\n        var siteDetails =  sitesModel.findBy(\'slug\', this.paramsFor(\'retriever.site\').slug);\n        // model.site_details;\n        // above also contains sitedetails but does not work with select2\n        // sitesModel.findBy(\'slug\', this.paramsFor(\'retriever.site\').slug);\n        controller.set(\'siteDetails\',siteDetails);\n        var retrieverController = this.controllerFor(\'retriever\');\n        // below ensures site select2 control is populated correctly\n        retrieverController.set(\'currentSite\', siteDetails);\n      }\n    });\n  });//# sourceURL=offcourse/routes/retriever/site.js");

;eval("define(\"offcourse/routes/retriever/site/category\", \n  [\"ember\",\"offcourse/models/topic\",\"offcourse/views/modal/topic\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Topic = __dependency2__[\"default\"];\n    var TopicModalView = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        previewTopic: function(topic) {\n          var hostUrl = this.controller.get(\'siteDetails.base_url\');\n          // this.get(\'parentView.siteDetails.base_url\');\n          // this.modelFor(\'retriever.site\').siteDetails.base_url;\n\n          var apiUrl = Topic.getTopicDetailsApiUrl(topic.id, hostUrl);\n          var that = this;\n          var result = $.getJSON(apiUrl).then(\n            function(detailedTopic) {\n              // that.set(\'posts\', detailedTopic.post_stream.posts);\n              that.controllerFor(\'modal/topic\').set(\'model\', detailedTopic);\n              that.send(\'openModal\', \'modal/topic\');\n            }\n          );\n\n        },\n        saveTopicsOffline: function() {\n\n          // var hostUrl = categoriesController.get(\'currentSourceUrl\');\n          // var hostSlug = categoriesController.get(\'currentSourceId\') || \"klavado\";\n          var selectedTopics = this.controller.get(\'selectedTopics\');\n          if (!selectedTopics || selectedTopics.length < 1) {\n            Bootstrap.GNM.push(\'ERROR!\', \'Please select topics to save\', \'error\');\n          } else {\n            // TODO - actually ensure topis are saved before showing this\n            Bootstrap.GNM.push(\'SUCCESS!\', \'Selected topics added\', \'success\');\n          };\n\n          var hostUrl = this.modelFor(\'retriever.site\').siteDetails.base_url;\n          var hostSlug = this.modelFor(\'retriever.site\').siteDetails.slug;\n          selectedTopics.forEach(function(topic) {\n\n            var apiUrl = Topic.getTopicDetailsApiUrl(topic.id, hostUrl);\n            var that = this;\n            var result = $.getJSON(apiUrl).then(\n              function(detailedTopic) {\n                // debugger;\n                var namespacedId = hostSlug + \"_\" + detailedTopic.id;\n\n                var topicProperties = {\n                  title: detailedTopic.title,\n                  post_stream: detailedTopic.post_stream,\n                  originalId: detailedTopic.id,\n                  sourceSiteSlug: hostSlug,\n                  id: namespacedId\n                };\n\n                Topic.findOrCreate(that.store, \'pouch_topic\', topicProperties);\n              }\n            );\n\n          }.bind(this));\n\n        },\n\n      },\n\n      model: function(params) {\n        var pageNumber = params.page_number || \"1\";\n        this.set(\'pageNumber\',pageNumber);\n        // var siteModel = this.modelFor(\'retriever.site\');\n        var siteSlug = this.paramsFor(\'retriever.site\').slug;\n        var apiUrl = \"/remote_discourse/topics_per_category.json?slug=\" + siteSlug +\n          \"&category=\" + params.category_slug +\n          \"&page_number=\" + pageNumber;\n        // Category.getIndexApiUrl(discourseUrl);\n        var topics = $.getJSON(apiUrl).then(\n          function(response) {\n            return response;\n          }\n        );\n        return topics;\n      },\n\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n        controller.set(\'selectedTopics\', []);\n        controller.set(\'siteDetails\', this.modelFor(\'retriever.site\').siteDetails);\n        var hasMorePages = model.topic_list.more_topics_url ? true : false;\n        var pageNumber = this.get(\'pageNumber\');\n        // controller.set(\'hasMorePages\', hasMorePages);\n        if (parseInt(pageNumber) > 1) {\n          controller.set(\'previousPageNumber\', (parseInt(pageNumber) - 1 ) )\n        };\n        if (hasMorePages && pageNumber) {\n          controller.set(\'nextPageNumber\', (parseInt(pageNumber) +1 ) )\n        };\n      }\n    });\n  });//# sourceURL=offcourse/routes/retriever/site/category.js");

;eval("define(\"offcourse/views/modal/topic\", \n  [\"offcourse/views/modal\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ModalView = __dependency1__[\"default\"];\n    var TopicModalView;\n\n    TopicModalView = ModalView.extend({\n    });\n\n    __exports__[\"default\"] = TopicModalView;\n  });//# sourceURL=offcourse/views/modal/topic.js");

;eval("define(\"offcourse/views/modal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ModalView;\n\n    ModalView = Ember.View.extend({\n      tagName: \'div\',\n      classNames: [\'modal\'],\n      attributeBindings: [\'tabindex\'],\n      tabindex: \"-1\",\n      didInsertElement: function() {\n        // debugger;\n        var $modal = this.$();\n        // $modal.attr(\'id\', \'modal\');\n        $modal.modal({\n          keyboard: true,\n          backdrop: true\n        });\n        $modal.modal(\'show\');\n        var self = this;\n        $modal.one(\"hide.bs.modal\", function () {\n          self.get(\"controller\").send(\"closeModal\");\n        });\n      },\n\n\n      //   _setupModal: function() {\n      //   var self = this,\n      //       $discourseModal = $(\'#discourse-modal\');\n\n      //   $discourseModal.modal(\'show\');\n      //   $discourseModal.one(\"hide\", function () {\n      //     self.get(\"controller\").send(\"closeModal\");\n      //   });\n\n      //   $(\'#modal-alert\').hide();\n\n      //   // Focus on first element\n      //   if (!Discourse.Mobile.mobileView && self.get(\'focusInput\')) {\n      //     Em.run.schedule(\'afterRender\', function() {\n      //       self.$(\'input:first\').focus();\n      //     });\n      //   }\n\n      //   var title = this.get(\'title\');\n      //   if (title) {\n      //     this.set(\'controller.controllers.modal.title\', title);\n      //   }\n      // }.on(\'didInsertElement\'),\n\n\n      // willDestroyElement: function() {\n      //   debugger;\n      //   return this.$().modal(\'hide\');\n      // }\n    });\n\n    __exports__[\"default\"] = ModalView;\n  });//# sourceURL=offcourse/views/modal.js");

;eval("define(\"offcourse/routes/retriever/site/category/default\", \n  [],\n  function() {\n    \"use strict\";\n    // import Ember from \'ember\';\n    // import Topic from \'../../../../models/topic\';\n    // import TopicModalView from \'../../../../views/modal/topic\';\n\n    // export default Ember.Route.extend({\n    //   actions: {\n    //     previewTopic: function(topic) {\n    //       var hostUrl = this.controller.get(\'siteDetails.base_url\');\n    //       // this.get(\'parentView.siteDetails.base_url\');\n    //       // this.modelFor(\'retriever.site\').siteDetails.base_url;\n\n    //       var apiUrl = Topic.getTopicDetailsApiUrl(topic.id, hostUrl);\n    //       var that = this;\n    //       var result = $.getJSON(apiUrl).then(\n    //         function(detailedTopic) {\n    //           // that.set(\'posts\', detailedTopic.post_stream.posts);\n    //           that.controllerFor(\'modal/topic\').set(\'model\', detailedTopic );\n    //           that.send(\'openModal\', \'modal/topic\');\n    //         }\n    //       );\n\n    //     },\n    //     saveTopicsOffline: function() {\n\n    //       // var hostUrl = categoriesController.get(\'currentSourceUrl\');\n    //       // var hostSlug = categoriesController.get(\'currentSourceId\') || \"klavado\";\n    //       var selectedTopics = this.controller.get(\'selectedTopics\');\n    //       if (!selectedTopics || selectedTopics.length < 1) {\n    //         Bootstrap.GNM.push(\'ERROR!\', \'Please select topics to save\', \'error\');\n    //       } else {\n    //         // TODO - actually ensure topis are saved before showing this\n    //         Bootstrap.GNM.push(\'SUCCESS!\', \'Selected topics added\', \'success\');\n    //       };\n\n    //       var hostUrl = this.modelFor(\'retriever.site\').siteDetails.base_url;\n    //       var hostSlug = this.modelFor(\'retriever.site\').siteDetails.slug;\n    //       selectedTopics.forEach(function(topic) {\n\n    //         var apiUrl = Topic.getTopicDetailsApiUrl(topic.id, hostUrl);\n    //         var that = this;\n    //         var result = $.getJSON(apiUrl).then(\n    //           function(detailedTopic) {\n    //             // debugger;\n    //             var namespacedId = hostSlug + \"_\" + detailedTopic.id;\n\n    //             var topicProperties = {\n    //               title: detailedTopic.title,\n    //               post_stream: detailedTopic.post_stream,\n    //               originalId: detailedTopic.id,\n    //               sourceSiteSlug: hostSlug,\n    //               id: namespacedId\n    //             };\n\n    //             Topic.findOrCreate(that.store, \'pouch_topic\', topicProperties);\n    //           }\n    //         );\n\n    //       }.bind(this));\n\n    //     },\n\n    //   },\n\n    //   model: function(params) {\n    //     // var discourseUrl = this.controllerFor(\'retriever\').get(\'model\');\n    //     // controller model above will not be ready here\n    //     // var siteModel = this.modelFor(\'retriever.site\');\n    //     var siteSlug = this.paramsFor(\'retriever.site\').slug;\n    //     var apiUrl = \"/remote_discourse/topics_per_category.json?slug=\" + siteSlug + \"&category=\" + params.category_slug;\n    //     // Category.getIndexApiUrl(discourseUrl);\n    //     var topics = $.getJSON(apiUrl).then(\n    //       function(response) {\n    //         return response;\n    //       }\n    //     );\n    //     return topics;\n    //   },\n\n    //   setupController: function(controller, model) {\n    //     controller.set(\'model\', model);\n    //     controller.set(\'selectedTopics\', []);\n    //     controller.set(\'siteDetails\', this.modelFor(\'retriever.site\').siteDetails);\n    //   }\n    // });\n  });//# sourceURL=offcourse/routes/retriever/site/category/default.js");

;eval("define(\"offcourse/routes/retriever/site/category/page\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    // import Topic from \'../../../models/topic\';\n    // import TopicModalView from \'../../../views/modal/topic\';\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function(params) {\n        debugger;\n        if (parseInt(params.page_number) > 1) {\n          \n        };\n\n        // var siteSlug = this.paramsFor(\'retriever.site\').slug;\n        // var apiUrl = \"/remote_discourse/topics_per_category.json?slug=\" + siteSlug + \"&category=\" + params.category_slug;\n        // // Category.getIndexApiUrl(discourseUrl);\n        // var topics = $.getJSON(apiUrl).then(\n        //   function(response) {\n        //     return response;\n        //   }\n        // );\n        // return topics;\n      },\n\n      // setupController: function(controller, model) {\n      //   controller.set(\'model\', model);\n      //   controller.set(\'selectedTopics\', []);\n      //   controller.set(\'siteDetails\', this.modelFor(\'retriever.site\').siteDetails);\n      // }\n    });\n  });//# sourceURL=offcourse/routes/retriever/site/category/page.js");

;eval("define(\"offcourse/routes/retriever/site/default\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    // import Category from \'../../models/category\';\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n\n      },\n\n      beforeModel: function(params) {\n        var categories = this.modelFor(\'retriever.site\').categories;\n        // redirect to the first category\n        var category = categories[0];\n        if (category) {\n          this.transitionTo(\'retriever.site.category\', category.slug, \"1\");\n        };\n      }\n    });\n  });//# sourceURL=offcourse/routes/retriever/site/default.js");

;eval("define(\"offcourse/routes/sites\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        addSite: function() {\n\n          var targetDiscourseUrl = this.controller.get(\'domainUrl\');\n          var valid = /^(ftp|http|https):\\/\\/[^ \"]+$/.test(targetDiscourseUrl);\n          if (!valid) {\n            alert(\'Sorry, invalid url\');\n            return;\n          }\n          var domain = targetDiscourseUrl.split(\'/\')[2] || targetDiscourseUrl.split(\'/\')[0];\n          // var domainTitle = domain.replace(/\\./g, \' \');\n          var domainId = domain.replace(/\\./g, \'_\');\n          // this.controller.set(\'currentSourceId\', domainId);\n          // // targetDiscourseUrl can be in an invalid state while currentSourceUrl is only set after having been validated\n          // this.controller.set(\'currentSourceUrl\', targetDiscourseUrl);\n\n          // var apiUrl = \"/remote_discourse/get_or_add_site.json?slug=\" + domainId;\n          // only use slug instead of host if I\'m sure site is in db\n          var apiUrl = \"/remote_discourse/get_or_add_site.json?host=\" + targetDiscourseUrl;\n\n          $.getJSON(apiUrl).then(\n            function(response) {\n              var site = this.store.createRecord(\'site\', {\n                display_name: response.display_name,\n                description: response.description,\n                slug: response.slug,\n                base_url: response.base_url\n              });\n              site.save();\n            }.bind(this)\n          );\n\n        }\n      },\n\n      model: function(params) {\n        var apiUrl = \"/remote_discourse/get_sites.json\";\n        var sites = $.getJSON(apiUrl).then(\n          function(response) {\n            return response;\n          });\n\n        return sites;\n      },\n\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n      }\n    });\n  });//# sourceURL=offcourse/routes/sites.js");

;eval("define(\"offcourse/routes/sites/site\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        error: function(error, transition) {\n          if (error) {\n            return this.transitionTo(\'sites\');\n          }\n          // Return true to bubble this event to any parent route.\n          return false;\n        }\n      },\n\n      model: function(params) {\n        // TODO - search pouchDB if offline\n        var apiUrl = \"/remote_discourse/get_or_add_site.json?slug=\" + params.slug\n        // Category.getSiteDetailsApiUrl(targetDiscourseUrl);\n\n        // var url = \"/remote_discourse/site_details.json?host=https://meta.discourse.org\";\n        // var url = \"/t/\" + params.id + \".json\";\n        var site = $.getJSON(apiUrl).then(\n          function(response) {\n            return response;\n          }\n        );\n        return site;\n      },\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n      }\n\n    });\n  });//# sourceURL=offcourse/routes/sites/site.js");

;eval("define(\"offcourse/routes/topics\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({});\n\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        destroyAllOfflineTopics: function() {\n          //   this.store.find(\'topic\').then(function(topics) {\n          //     debugger;\n          //     topics.destroy(); \n          //   });\n          // this.get(\'store\').findAll(\'topic\').invoke(\'destroyRecord\');\n          // above does not work\n          var that = this;\n          this.get(\'store\').findAll(\'pouch_topic\').then(function(record) {\n            record.content.forEach(function(rec) {\n              Ember.run.once(this, function() {\n                rec.deleteRecord();\n                rec.save();\n              });\n            }, this);\n          }).then(function() {\n            // this.growl.info(\"Yep, it\'s working.\");\n            // Bootstrap.GNM.push(\'INFO!\', \'Hello, this is just an info message.\', \'info\');\n            Bootstrap.GNM.push(\'SUCCESS!\', \'All offline topics removed!\', \'success\');\n          }.bind(this));\n        }\n      },\n\n      model: function(params) {\n        var topics = this.store.find(\'pouch_topic\');\n        return topics;\n      },\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n        this.controller.set(\'offlineTopicsCount\', model.content.length);\n      },\n      // deactivate: function() {\n      //   var categoryController = this.controllerFor(\'categories.category\');\n      //   categoryController.set(\'isTopicView\', false);\n      // }\n\n\n    });\n  });//# sourceURL=offcourse/routes/topics.js");

;eval("define(\"offcourse/routes/topics/default\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    // import Category from \'../../models/category\';\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n\n      },\n\n      beforeModel: function(params) {\n        var topics = this.modelFor(\'topics\').content;\n        // redirect to the first topic\n        var topic = topics[0];\n        if (topic) {\n        	this.transitionTo(\'topics.topic\', topic.id);\n        };\n      }\n    });\n  });//# sourceURL=offcourse/routes/topics/default.js");

;eval("define(\"offcourse/routes/topics/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        error: function(error, transition) {\n          if (error) {\n            return this.transitionTo(\'topics\');\n          }\n          // Return true to bubble this event to any parent route.\n          return false;\n        }\n      },\n\n      model: function(params) {\n        var topic = this.store.find(\'pouch_topic\', params.id);\n\n        // var url = \"/t/\" + params.id + \".json\";\n        // var topic = $.getJSON(url).then(\n        //   function(response) {\n        //     return response;\n        //   }\n        // );\n        return topic;\n      },\n      setupController: function(controller, model) {\n        // controller.set(\'model\', model.get(\'data\'));\n        controller.set(\'model\',model);\n      }\n\n    });\n  });//# sourceURL=offcourse/routes/topics/topic.js");

;eval("define(\"offcourse/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" Offcourse \");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <span>Navigator is online</span>\\n      \");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <span>Navigator is offline</span>\\n      \");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <span>Network is online</span>\\n      \");\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <span>Network is offline</span>\\n      \");\n      }\n\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <p>Modal content!</p>\\n    \");\n      }\n\n      data.buffer.push(\"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n\\n      <div class=\\\"navbar-brand\\\" id=\'title\'>\\n      <span style=\\\"margin:0px\\\">        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </span>  \\n      <span class=\\\"navbar-banner\\\"> - an offline aggregator for discourse forums</span>\\n\\n      </div>\\n\\n    </div>\\n\\n\\n\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n\\n\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container offcourse-main\\\">\\n\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"well\\\">\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"controller.navigatorIsOnline\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"controller.networkIsOnline\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n  </div>\\n</div>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-growl-notifications\'] || (depth0 && depth0[\'bs-growl-notifications\']),options={hash:{\n        \'showTime\': (\"4000\")\n      },hashTypes:{\'showTime\': \"STRING\"},hashContexts:{\'showTime\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-growl-notifications\", options))));\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"modal\", options) : helperMissing.call(depth0, \"outlet\", \"modal\", options))));\n      data.buffer.push(\"\\n\\n   \");\n      stack1 = (helper = helpers[\'bs-modal\'] || (depth0 && depth0[\'bs-modal\']),options={hash:{\n        \'name\': (\"myModal\"),\n        \'fade\': (true),\n        \'footerButtonsBinding\': (\"myModalButtons\"),\n        \'title\': (\"My Modal\")\n      },hashTypes:{\'name\': \"STRING\",\'fade\': \"BOOLEAN\",\'footerButtonsBinding\': \"STRING\",\'title\': \"STRING\"},hashContexts:{\'name\': depth0,\'fade\': depth0,\'footerButtonsBinding\': depth0,\'title\': depth0},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-modal\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/application.js");

;eval("define(\"offcourse/templates/categories\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" offline. \");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n      <li>\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"categories.category\", \"item.slug\", options) : helperMissing.call(depth0, \"link-to\", \"categories.category\", \"item.slug\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </li>\\n      \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"item.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  <span>You have \");\n      stack1 = helpers._triageMustache.call(depth0, \"offlineTopicsCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" topics viewable \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"topics\", options) : helperMissing.call(depth0, \"link-to\", \"topics\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n  \");\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n  <span>You do not have topics viewable offline.</span>\\n  \");\n      }\n\n      data.buffer.push(\"<div>\\n  <h3>Select topics to view \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"topics\", options) : helperMissing.call(depth0, \"link-to\", \"topics\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h3>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h6 style=\\\"margin-top: 5px;\\\">Displaying info from \");\n      stack1 = helpers._triageMustache.call(depth0, \"currentSourceUrl\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\". \\n      Enter the base url for a discourse site to retrieve topics from that site:\\n    </h6>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'select-2\'] || (depth0 && depth0[\'select-2\']),options={hash:{\n        \'content\': (\"controller.sites\"),\n        \'value\': (\"domainUrl\"),\n        \'placeholder\': (\"Choose site\"),\n        \'allow-clear\': (true)\n      },hashTypes:{\'content\': \"ID\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'allow-clear\': \"BOOLEAN\"},hashContexts:{\'content\': depth0,\'value\': depth0,\'placeholder\': depth0,\'allow-clear\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"select-2\", options))));\n      data.buffer.push(\"\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <form class=\\\"domain-form\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"changeDomain\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n      <table>\\n        <tr class=\\\"input\\\">\\n          <td style=\\\"\\\">\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'placeholder\': (\"eg: https://meta.discourse.org\"),\n        \'value\': (\"domainUrl\"),\n        \'id\': (\"domain-url\"),\n        \'autofocus\': (\"autofocus\")\n      },hashTypes:{\'placeholder\': \"STRING\",\'value\': \"ID\",\'id\': \"STRING\",\'autofocus\': \"STRING\"},hashContexts:{\'placeholder\': depth0,\'value\': depth0,\'id\': depth0,\'autofocus\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n          </td>\\n          <td>\\n            <button class=\'btn btn-small btn-primary\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"changeDomain\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n              Go\\n            </button>\\n          </td>\\n        </tr>\\n\\n        <tr class=\\\"instructions\\\">\\n          <td>\\n            <label></label>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\n  <div class=\\\"col-md-3 categories-list\\\">\\n    Pick a category:\\n\\n    <ul>\\n\\n      \");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.category_list.categories\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n    </ul>\\n\\n  </div>\\n\\n  <div class=\\\"col-md-9 topics-list\\\">\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"row\\\">\\n\\n  \");\n      stack1 = helpers[\'if\'].call(depth0, \"offlineTopicsCount\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/categories.js");

;eval("define(\"offcourse/templates/categories/category\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  <div class=\\\"selectable-topics\\\">\\n\\nSelect topics below <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveTopicsOffline\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" > and click here to save offline </button>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'multiselect-checkboxes\'] || (depth0 && depth0[\'multiselect-checkboxes\']),options={hash:{\n        \'options\': (\"model.topic_list.topics\"),\n        \'labelProperty\': (\"title\"),\n        \'selection\': (\"selectedTopics\")\n      },hashTypes:{\'options\': \"ID\",\'labelProperty\': \"STRING\",\'selection\': \"ID\"},hashContexts:{\'options\': depth0,\'labelProperty\': depth0,\'selection\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"multiselect-checkboxes\", options))));\n      data.buffer.push(\"\\n\\n\\n\\n\\n	</div>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"\\n\");\n      stack1 = helpers.unless.call(depth0, \"isTopicView\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<div>\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/categories/category.js");

;eval("define(\"offcourse/templates/categories/category/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n		   back to topics list\\n		\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n	<div>\\n		  \");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"item.cooked\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n\\n	</div>\\n	\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n		\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"categories.category\", \"model.category_slug\", options) : helperMissing.call(depth0, \"link-to\", \"categories.category\", \"model.category_slug\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveOffline\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" > Save offline </button>\\n\\n		<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"retrieveFromPouchDb\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" > Retrieve Topic from PouchDb </button>\\n\\n</div>\\n\\n<div class=\\\"topic-details\\\">\\n	\\n<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"model.fancy_title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n\\n<div class=\\\"\\\">\\n	<ul>\\n\\n	\");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.post_stream.posts\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	</ul>\\n\\n</div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/categories/category/topic.js");

;eval("define(\"offcourse/templates/components/post-details\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, functionType=\"function\", helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <a href \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"expandHidden\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"post.show_hidden\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a>\\n        \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\" \");\n      stack1 = helpers[\'if\'].call(depth0, \"controller.loadingExpanded\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <button class=\\\"btn expand-post\\\" disabled>\");\n      stack1 = helpers._triageMustache.call(depth0, \"loading\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n        \");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"expandFirstPost\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" class=\'btn expand-post\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"post.show_full\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"&hellip;</button>\\n        \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<article style=\\\"margin: 10px;\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":boxed via_email\"),\n        \'id\': (\"postElementId\"),\n        \'data-post-id\': (\"id\"),\n        \'data-user-id\': (\"user_id\")\n      },hashTypes:{\'class\': \"STRING\",\'id\': \"STRING\",\'data-post-id\': \"STRING\",\'data-user-id\': \"STRING\"},hashContexts:{\'class\': depth0,\'id\': depth0,\'data-post-id\': depth0,\'data-user-id\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n  <div class=\'row\'>\\n\\n    <div class=\'topic-meta-data\' style=\\\"font-weight: bold;\\\">\\n      <div class=\\\"poster-name pull-left\\\">\\n        \");\n      data.buffer.push(escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.post)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1)));\n      data.buffer.push(\"\\n      </div>\\n      <div class=\'post-info pull-right\'>\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.moment || (depth0 && depth0.moment),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"post.created_at\", options) : helperMissing.call(depth0, \"moment\", \"post.created_at\", options))));\n      data.buffer.push(\" ( \");\n      data.buffer.push(escapeExpression((helper = helpers.ago || (depth0 && depth0.ago),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"post.created_at\", options) : helperMissing.call(depth0, \"ago\", \"post.created_at\", options))));\n      data.buffer.push(\" )\\n      </div>\\n      <div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":read-state read\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" title=\\\"\");\n      stack1 = helpers._triageMustache.call(depth0, \"post.unread\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"circle-icon\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n    </div>\\n\\n  </div>\\n  <div class=\'row\'>\\n\\n    <div class=\'topic-body\'>\\n\\n      <div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":select-posts controller.multiSelect::hidden\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n        <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggledSelectedPostReplies\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"view.canSelectReplies::hidden\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"topic.multi_select.select_replies\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n        <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggledSelectedPost\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" class=\\\"select-post\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"view.selectPostText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n      </div>\\n\\n      <!-- keep the classes here in sync with composer.hbs -->\\n      <div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"showUserReplyTab:avoid-tab view.repliesShown::bottom-round :contents :regular view.extraClass\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n        <div class=\'cooked\'>\\n          \");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"post.cooked\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n        </div>\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"cooked_hidden\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers[\'if\'].call(depth0, \"view.showExpandButton\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \\n      </div>\\n      \\n    </div>\\n\\n    \\n  </div>\\n\\n</article>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/components/post-details.js");

;eval("define(\"offcourse/templates/components/summary-topic-list-item\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<label class=\\\"topic-list-label\\\">\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"isSelected\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"value.fancy_title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</label>\\n\\n<div>\\n\\n	<a target=\\\"_blank\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"url\")\n      },hashTypes:{\'href\': \"ID\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" >original</a> | <a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"previewTopic\", \"value\", {hash:{\n        \'target\': (\"view.parentView\")\n      },hashTypes:{\'target\': \"STRING\"},hashContexts:{\'target\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" >preview</a>\\n	\\n<div class=\\\"pull-right\\\">\\n\\n		<span class=\\\"badge\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"value.like_count\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" <i class=\\\"fa fa-heart\\\"></i></span>\\n	<span class=\\\"badge\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"value.views\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"  <i class=\\\"fa fa-eye\\\"></i></span>\\n	<span class=\\\"badge\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"value.posts_count\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" <i class=\\\"fa fa-comments\\\"></i></span>\\n	<span class=\\\"badge\\\">latest: \");\n      data.buffer.push(escapeExpression((helper = helpers.ago || (depth0 && depth0.ago),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"value.last_posted_at\", options) : helperMissing.call(depth0, \"ago\", \"value.last_posted_at\", options))));\n      data.buffer.push(\"</span>\\n</div>\\n\\n</div>\\n \\n\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/components/summary-topic-list-item.js");

;eval("define(\"offcourse/templates/components/summary-topic-list\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'summary-topic-list-item\'] || (depth0 && depth0[\'summary-topic-list-item\']),options={hash:{\n        \'value\': (\"option\"),\n        \'labelProperty\': (\"labelProperty\"),\n        \'selection\': (\"selection\")\n      },hashTypes:{\'value\': \"ID\",\'labelProperty\': \"ID\",\'selection\': \"ID\"},hashContexts:{\'value\': depth0,\'labelProperty\': depth0,\'selection\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"summary-topic-list-item\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      stack1 = helpers.each.call(depth0, \"option\", \"in\", \"options\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/components/summary-topic-list.js");

;eval("define(\"offcourse/templates/modal/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n        <li class=\\\"list-group-item\\\">\\n          \");\n      data.buffer.push(escapeExpression((helper = helpers[\'post-details\'] || (depth0 && depth0[\'post-details\']),options={hash:{\n        \'post\': (\"item\")\n      },hashTypes:{\'post\': \"ID\"},hashContexts:{\'post\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"post-details\", options))));\n      data.buffer.push(\"\\n        </li>\\n        \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"modal-dialog modal-lg\\\">\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      <button class=\\\"close\\\" type=\\\"button\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancel\", {hash:{\n        \'on\': (\"click\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\">x</button>\\n      <h4 class=\\\"modal-title\\\">Topic Preview</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n\\n    <h3>\");\n      stack1 = helpers._triageMustache.call(depth0, \"model.fancy_title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h3>\\n      <ul class=\\\"list-group\\\">\\n        \");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.post_stream.posts\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </ul>\\n\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button class=\\\"btn btn-primary\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancel\", {hash:{\n        \'on\': (\"click\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\">Ok</a>\\n    </div>\\n  </div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/modal/topic.js");

;eval("define(\"offcourse/templates/retriever\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-2\\\">\\n    <div>\\n      <label class=\\\"control-label\\\" style=\\\"margin-top: 5%;\\\">Displaying info from:</label>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'select-2\'] || (depth0 && depth0[\'select-2\']),options={hash:{\n        \'content\': (\"model\"),\n        \'value\': (\"currentSite\"),\n        \'placeholder\': (\"Choose site\"),\n        \'allow-clear\': (true)\n      },hashTypes:{\'content\': \"ID\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'allow-clear\': \"BOOLEAN\"},hashContexts:{\'content\': depth0,\'value\': depth0,\'placeholder\': depth0,\'allow-clear\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"select-2\", options))));\n      data.buffer.push(\"\\n  </div>\\n\\n  <div class=\\\"col-md-6\\\">\\n    <img style=\\\"max-height: 20px;\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"currentSite.logo_url\")\n      },hashTypes:{\'src\': \"ID\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n    <a target=\\\"_blank\\\"  \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"currentSite.base_url\")\n      },hashTypes:{\'href\': \"ID\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" >\");\n      stack1 = helpers._triageMustache.call(depth0, \"currentSite.display_name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a>\\n    <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"currentSite.description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n  </div>\\n\\n</div>\\n<div class=\\\"row\\\" style=\\\"margin-top:10px\\\">\\n  <div class=\\\"col-md-2\\\">\\n    <div>\\n      <label class=\\\"control-label\\\" style=\\\"margin-top: 5%;\\\">Add a discourse site url:</label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-md-4\\\">\\n    <form \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addSite\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\'name\'></label>\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'placeholder\': (\"eg: https://meta.discourse.org\"),\n        \'value\': (\"newSiteUrl\"),\n        \'id\': (\"domain-url\"),\n        \'autofocus\': (\"autofocus\"),\n        \'class\': (\"form-control inline-input\")\n      },hashTypes:{\'placeholder\': \"STRING\",\'value\': \"ID\",\'id\': \"STRING\",\'autofocus\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'placeholder\': depth0,\'value\': depth0,\'id\': depth0,\'autofocus\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"submit\\\">Add</button>\\n\\n      </div>\\n    </form>\\n\\n  </div>\\n\\n</div>\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/retriever.js");

;eval("define(\"offcourse/templates/retriever/site\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'class\': (\"category-nav-item\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"retriever.site.category\", \"controller.siteDetails.slug\", \"item.slug\", \"1\", options) : helperMissing.call(depth0, \"link-to\", \"retriever.site.category\", \"controller.siteDetails.slug\", \"item.slug\", \"1\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n      \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"view.href\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"item.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"   \\n        </a>\\n      \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\n  <div class=\\\"col-md-1 categories-list\\\">\\n    <h4>Categories:</h4>\\n    <ul class=\\\"nav nav-pills nav-stacked\\\">\\n      \");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.categories\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n    </ul>\\n\\n  </div>\\n\\n  <div class=\\\"col-md-11 topics-list\\\">\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/retriever/site.js");

;eval("define(\"offcourse/templates/retriever/site/category\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" View your offline topics \");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'class\': (\"category-nav-item\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"retriever.site.category\", \"controller.siteDetails.slug\", \"model.category\", \"controller.previousPageNumber\", options) : helperMissing.call(depth0, \"link-to\", \"retriever.site.category\", \"controller.siteDetails.slug\", \"model.category\", \"controller.previousPageNumber\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n        <a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"view.href\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">previous </a>\\n      \");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'class\': (\"category-nav-item\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0,depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"retriever.site.category\", \"controller.siteDetails.slug\", \"model.category\", \"controller.nextPageNumber\", options) : helperMissing.call(depth0, \"link-to\", \"retriever.site.category\", \"controller.siteDetails.slug\", \"model.category\", \"controller.nextPageNumber\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n    function program7(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n        <a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"view.href\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">next </a>\\n      \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"selectable-topics\\\">\\n\\n  <div class=\\\"row\\\">\\n    <h3 style=\\\"margin-top:0px\\\">Select topics below\\n      <small><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveTopicsOffline\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">and click here to save offline</a>\\n      </small>\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"btn btn-primary btn-sm pull-right\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"topics\", options) : helperMissing.call(depth0, \"link-to\", \"topics\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n    </h3>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'summary-topic-list\'] || (depth0 && depth0[\'summary-topic-list\']),options={hash:{\n        \'options\': (\"model.topic_list.topics\"),\n        \'labelProperty\': (\"title\"),\n        \'siteDetails\': (\"controller.siteDetails\"),\n        \'selection\': (\"selectedTopics\"),\n        \'previewTopicAction\': (\"previewTopic\")\n      },hashTypes:{\'options\': \"ID\",\'labelProperty\': \"STRING\",\'siteDetails\': \"ID\",\'selection\': \"ID\",\'previewTopicAction\': \"STRING\"},hashContexts:{\'options\': depth0,\'labelProperty\': depth0,\'siteDetails\': depth0,\'selection\': depth0,\'previewTopicAction\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"summary-topic-list\", options))));\n      data.buffer.push(\"\\n  </div>\\n\\n\\n<nav>\\n  <ul class=\\\"pagination pull-right\\\">\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"controller.previousPageNumber\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  \");\n      stack1 = helpers[\'if\'].call(depth0, \"controller.nextPageNumber\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  </ul>\\n</nav>\\n\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/retriever/site/category.js");

;eval("define(\"offcourse/templates/sites\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n          <li>\\n            \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"sites.site\", \"site.slug\", options) : helperMissing.call(depth0, \"link-to\", \"sites.site\", \"site.slug\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n          </li>\\n          \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"site.display_name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n\\n  <div class=\\\"col-md-6\\\">\\n    <form \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addSite\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n      <h2>Add a discourse site</h2>\\n      <div class=\\\"form-group\\\">\\n        <label for=\'name\'>Url:</label>\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'placeholder\': (\"eg: https://meta.discourse.org\"),\n        \'value\': (\"domainUrl\"),\n        \'id\': (\"domain-url\"),\n        \'autofocus\': (\"autofocus\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'placeholder\': \"STRING\",\'value\': \"ID\",\'id\': \"STRING\",\'autofocus\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'placeholder\': depth0,\'value\': depth0,\'id\': depth0,\'autofocus\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n      </div>\\n\\n\\n\\n      <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">Save</button>\\n    </form>\\n  </div>\\n\\n</div>\\n\\n\\n<div>\\n  <h3>Discourse sites</h3>\\n</div>\\n\\n<div class=\\\"row offline-topics\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"bs-sidebar hidden-print affix-top\\\" role=\\\"complementary\\\">\\n      <ul class=\\\"nav bs-sidenav\\\">\\n        <ul>\\n\\n          \");\n      stack1 = helpers.each.call(depth0, \"site\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n        </ul>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-9\\\" role=\\\"main\\\">\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/sites.js");

;eval("define(\"offcourse/templates/sites/site\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    Site details\\n</div>\\n\\n<div class=\\\"topic-details\\\">\\n\\n  <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"model.display_name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n     <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"model.description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n    </div>\\n\\n\\n\\n  </div>\\n\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/sites/site.js");

;eval("define(\"offcourse/templates/topics\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n<div>\\n  <h3>You do not have topics viewable offline. <small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"retriever\", options) : helperMissing.call(depth0, \"link-to\", \"retriever\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small> </h3>\\n</div>\\n\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\" Go online to add some. \");\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n<div>\\n  <h3>Topics available to view offline.  <small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"retriever\", options) : helperMissing.call(depth0, \"link-to\", \"retriever\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small> </h3>\\n</div>\\n\\n<div class=\\\"row offline-topics\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"bs-sidebar hidden-print affix-top\\\" role=\\\"complementary\\\">\\n        <ul class=\\\"nav nav-pills nav-stacked\\\">\\n          \");\n      stack1 = helpers.each.call(depth0, \"topic\", \"in\", \"model.content\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </ul>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-9\\\" role=\\\"main\\\">\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"well\\\">\\n    <div>\\n      <span>You have \");\n      stack1 = helpers._triageMustache.call(depth0, \"offlineTopicsCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" topics viewable offline. \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"retriever\", options) : helperMissing.call(depth0, \"link-to\", \"retriever\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n    </div>\\n    <div>\\n      <a href=\\\"\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"destroyAllOfflineTopics\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Remove all offline topics</a>\\n    </div>\\n\\n    \\n  </div>\\n</div>\\n\");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\" Go online to add more. \");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n            \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'class\': (\"topic-nav-item\")\n      },hashTypes:{\'tagName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"topics.topic\", \"topic.id\", options) : helperMissing.call(depth0, \"link-to\", \"topics.topic\", \"topic.id\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n          \");\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n                <a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"view.href\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"topic.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a>\\n            \");\n      return buffer;\n      }\n\n      data.buffer.push(\"\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"noOfflineTopics\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/topics.js");

;eval("define(\"offcourse/templates/topics/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n      <li class=\\\"list-group-item\\\">\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers[\'post-details\'] || (depth0 && depth0[\'post-details\']),options={hash:{\n        \'post\': (\"item\")\n      },hashTypes:{\'post\': \"ID\"},hashContexts:{\'post\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"post-details\", options))));\n      data.buffer.push(\"\\n      </li>\\n      \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n\\n</div>\\n\\n<div class=\\\"topic-details\\\">\\n\\n  <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"model.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n    </div>\\n\\n    <ul class=\\\"list-group\\\">\\n      \");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.posts\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n\\n  </div>\\n\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/topics/topic.js");

;eval("define(\"offcourse/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/adapters/application.jshint.js");

;eval("define(\"offcourse/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/app.jshint.js");

;eval("define(\"offcourse/tests/components/post-details.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/post-details.js should pass jshint\', function() { \n      ok(true, \'components/post-details.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/components/post-details.jshint.js");

;eval("define(\"offcourse/tests/components/summary-topic-list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/summary-topic-list-item.js should pass jshint\', function() { \n      ok(false, \'components/summary-topic-list-item.js should pass jshint.\\ncomponents/summary-topic-list-item.js: line 2, col 8, \\\'Topic\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=offcourse/tests/components/summary-topic-list-item.jshint.js");

;eval("define(\"offcourse/tests/components/summary-topic-list.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/summary-topic-list.js should pass jshint\', function() { \n      ok(false, \'components/summary-topic-list.js should pass jshint.\\ncomponents/summary-topic-list.js: line 16, col 51, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=offcourse/tests/components/summary-topic-list.jshint.js");

;eval("define(\"offcourse/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(false, \'controllers/application.js should pass jshint.\\ncontrollers/application.js: line 21, col 9, Forgotten \\\'debugger\\\' statement?\\ncontrollers/application.js: line 23, col 22, \\\'result\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/controllers/application.jshint.js");

;eval("define(\"offcourse/tests/controllers/categories.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/categories.js should pass jshint\', function() { \n      ok(false, \'controllers/categories.js should pass jshint.\\ncontrollers/categories.js: line 11, col 7, Forgotten \\\'debugger\\\' statement?\\n\\n1 error\'); \n    });\n  });//# sourceURL=offcourse/tests/controllers/categories.jshint.js");

;eval("define(\"offcourse/tests/controllers/modal.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/modal.js should pass jshint\', function() { \n      ok(true, \'controllers/modal.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/controllers/modal.jshint.js");

;eval("define(\"offcourse/tests/controllers/modal/topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/modal\');\n    test(\'controllers/modal/topic.js should pass jshint\', function() { \n      ok(true, \'controllers/modal/topic.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/controllers/modal/topic.jshint.js");

;eval("define(\"offcourse/tests/controllers/retriever.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/retriever.js should pass jshint\', function() { \n      ok(false, \'controllers/retriever.js should pass jshint.\\ncontrollers/retriever.js: line 13, col 6, Unnecessary semicolon.\\ncontrollers/retriever.js: line 16, col 63, Missing semicolon.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/controllers/retriever.jshint.js");

;eval("define(\"offcourse/tests/controllers/topics.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/topics.js should pass jshint\', function() { \n      ok(false, \'controllers/topics.js should pass jshint.\\ncontrollers/topics.js: line 11, col 10, Unnecessary semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=offcourse/tests/controllers/topics.jshint.js");

;eval("define(\"offcourse/tests/helpers/resolver\", \n  [\"ember/resolver\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=offcourse/tests/helpers/resolver.js");

;eval("define(\"offcourse/tests/helpers/start-app\", \n  [\"ember\",\"offcourse/app\",\"offcourse/router\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=offcourse/tests/helpers/start-app.js");

;eval("define(\"offcourse/tests/models/category.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/category.js should pass jshint\', function() { \n      ok(true, \'models/category.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/models/category.jshint.js");

;eval("define(\"offcourse/tests/models/pouch_topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/pouch_topic.js should pass jshint\', function() { \n      ok(false, \'models/pouch_topic.js should pass jshint.\\nmodels/pouch_topic.js: line 15, col 7, Missing semicolon.\\nmodels/pouch_topic.js: line 14, col 14, \\\'Em\\\' is not defined.\\nmodels/pouch_topic.js: line 29, col 65, \\\'_this\\\' is defined but never used.\\nmodels/pouch_topic.js: line 30, col 23, \\\'reason\\\' is defined but never used.\\n\\n4 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/models/pouch_topic.jshint.js");

;eval("define(\"offcourse/tests/models/site.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/site.js should pass jshint\', function() { \n      ok(false, \'models/site.js should pass jshint.\\nmodels/site.js: line 18, col 87, Missing semicolon.\\nmodels/site.js: line 17, col 42, \\\'targetDiscourseUrl\\\' is defined but never used.\\nmodels/site.js: line 17, col 34, \\\'SiteId\\\' is defined but never used.\\n\\n3 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/models/site.jshint.js");

;eval("define(\"offcourse/tests/models/topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/topic.js should pass jshint\', function() { \n      ok(false, \'models/topic.js should pass jshint.\\nmodels/topic.js: line 22, col 65, \\\'_this\\\' is defined but never used.\\nmodels/topic.js: line 23, col 23, \\\'reason\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/models/topic.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/helpers\');\n    test(\'offcourse/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/helpers/resolver.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/helpers\');\n    test(\'offcourse/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/helpers/start-app.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests\');\n    test(\'offcourse/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/test-helper.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/adapters/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/adapters\');\n    test(\'offcourse/tests/unit/adapters/application-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/adapters/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/adapters/application-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/components/post-details-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/components\');\n    test(\'offcourse/tests/unit/components/post-details-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/components/post-details-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/components/post-details-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/components/summary-topic-list-item-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/components\');\n    test(\'offcourse/tests/unit/components/summary-topic-list-item-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/components/summary-topic-list-item-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/components/summary-topic-list-item-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/components/summary-topic-list-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/components\');\n    test(\'offcourse/tests/unit/components/summary-topic-list-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/components/summary-topic-list-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/components/summary-topic-list-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/controllers\');\n    test(\'offcourse/tests/unit/controllers/application-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/controllers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/controllers/application-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/controllers/modal-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/controllers\');\n    test(\'offcourse/tests/unit/controllers/modal-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/controllers/modal-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/controllers/modal-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/controllers/modal/topic-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/controllers/modal\');\n    test(\'offcourse/tests/unit/controllers/modal/topic-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/controllers/modal/topic-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/controllers/modal/topic-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/controllers/topics-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/controllers\');\n    test(\'offcourse/tests/unit/controllers/topics-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/controllers/topics-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/controllers/topics-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/models/category-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/models\');\n    test(\'offcourse/tests/unit/models/category-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/models/category-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/models/category-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/models/site-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/models\');\n    test(\'offcourse/tests/unit/models/site-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/models/site-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/models/site-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/models/topic-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/models\');\n    test(\'offcourse/tests/unit/models/topic-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/models/topic-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/models/topic-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes\');\n    test(\'offcourse/tests/unit/routes/application-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/application-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/categories-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes\');\n    test(\'offcourse/tests/unit/routes/categories-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/categories-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/categories-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/categories/category-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes/categories\');\n    test(\'offcourse/tests/unit/routes/categories/category-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/categories/category-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/categories/category-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/categories/category/topic-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes/categories/category\');\n    test(\'offcourse/tests/unit/routes/categories/category/topic-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/categories/category/topic-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/categories/category/topic-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/sites-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes\');\n    test(\'offcourse/tests/unit/routes/sites-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/sites-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/sites-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/topics-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes\');\n    test(\'offcourse/tests/unit/routes/topics-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/topics-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/topics-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/transforms/raw-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/transforms\');\n    test(\'offcourse/tests/unit/transforms/raw-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/transforms/raw-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/transforms/raw-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/views/modal-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/views\');\n    test(\'offcourse/tests/unit/views/modal-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/views/modal-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/views/modal-test.jshint.js");

;eval("define(\"offcourse/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/router.jshint.js");

;eval("define(\"offcourse/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/application.jshint.js");

;eval("define(\"offcourse/tests/routes/categories.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/categories.js should pass jshint\', function() { \n      ok(false, \'routes/categories.js should pass jshint.\\nroutes/categories.js: line 58, col 77, Missing semicolon.\\nroutes/categories.js: line 60, col 6, Unnecessary semicolon.\\nroutes/categories.js: line 85, col 11, Missing semicolon.\\nroutes/categories.js: line 45, col 19, \\\'params\\\' is defined but never used.\\n\\n4 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/categories.jshint.js");

;eval("define(\"offcourse/tests/routes/categories/category.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/categories\');\n    test(\'routes/categories/category.js should pass jshint\', function() { \n      ok(false, \'routes/categories/category.js should pass jshint.\\nroutes/categories/category.js: line 17, col 8, Unnecessary semicolon.\\nroutes/categories/category.js: line 13, col 9, \\\'Bootstrap\\\' is not defined.\\nroutes/categories/category.js: line 16, col 9, \\\'Bootstrap\\\' is not defined.\\nroutes/categories/category.js: line 22, col 13, \\\'result\\\' is defined but never used.\\nroutes/categories/category.js: line 42, col 28, \\\'transition\\\' is defined but never used.\\n\\n5 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/categories/category.jshint.js");

;eval("define(\"offcourse/tests/routes/categories/category/topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/categories/category\');\n    test(\'routes/categories/category/topic.js should pass jshint\', function() { \n      ok(true, \'routes/categories/category/topic.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/categories/category/topic.jshint.js");

;eval("define(\"offcourse/tests/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/index.js should pass jshint\', function() { \n      ok(true, \'routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/index.jshint.js");

;eval("define(\"offcourse/tests/routes/retriever.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/retriever.js should pass jshint\', function() { \n      ok(true, \'routes/retriever.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/retriever.jshint.js");

;eval("define(\"offcourse/tests/routes/retriever/default.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/retriever\');\n    test(\'routes/retriever/default.js should pass jshint\', function() { \n      ok(false, \'routes/retriever/default.js should pass jshint.\\nroutes/retriever/default.js: line 14, col 6, Unnecessary semicolon.\\nroutes/retriever/default.js: line 9, col 25, \\\'params\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/retriever/default.jshint.js");

;eval("define(\"offcourse/tests/routes/retriever/site.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/retriever\');\n    test(\'routes/retriever/site.js should pass jshint\', function() { \n      ok(true, \'routes/retriever/site.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/retriever/site.jshint.js");

;eval("define(\"offcourse/tests/routes/retriever/site/category.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/retriever/site\');\n    test(\'routes/retriever/site/category.js should pass jshint\', function() { \n      ok(false, \'routes/retriever/site/category.js should pass jshint.\\nroutes/retriever/site/category.js: line 33, col 8, Unnecessary semicolon.\\nroutes/retriever/site/category.js: line 89, col 73, Missing semicolon.\\nroutes/retriever/site/category.js: line 90, col 6, Unnecessary semicolon.\\nroutes/retriever/site/category.js: line 92, col 68, Missing semicolon.\\nroutes/retriever/site/category.js: line 93, col 6, Unnecessary semicolon.\\nroutes/retriever/site/category.js: line 29, col 9, \\\'Bootstrap\\\' is not defined.\\nroutes/retriever/site/category.js: line 32, col 9, \\\'Bootstrap\\\' is not defined.\\nroutes/retriever/site/category.js: line 3, col 8, \\\'TopicModalView\\\' is defined but never used.\\nroutes/retriever/site/category.js: line 14, col 11, \\\'result\\\' is defined but never used.\\nroutes/retriever/site/category.js: line 41, col 13, \\\'result\\\' is defined but never used.\\n\\n10 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/retriever/site/category.jshint.js");

;eval("define(\"offcourse/tests/routes/retriever/site/category/default.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/retriever/site/category\');\n    test(\'routes/retriever/site/category/default.js should pass jshint\', function() { \n      ok(true, \'routes/retriever/site/category/default.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/retriever/site/category/default.jshint.js");

;eval("define(\"offcourse/tests/routes/retriever/site/category/page.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/retriever/site/category\');\n    test(\'routes/retriever/site/category/page.js should pass jshint\', function() { \n      ok(false, \'routes/retriever/site/category/page.js should pass jshint.\\nroutes/retriever/site/category/page.js: line 8, col 5, Forgotten \\\'debugger\\\' statement?\\nroutes/retriever/site/category/page.js: line 11, col 6, Unnecessary semicolon.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/retriever/site/category/page.jshint.js");

;eval("define(\"offcourse/tests/routes/retriever/site/default.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/retriever/site\');\n    test(\'routes/retriever/site/default.js should pass jshint\', function() { \n      ok(false, \'routes/retriever/site/default.js should pass jshint.\\nroutes/retriever/site/default.js: line 15, col 6, Unnecessary semicolon.\\nroutes/retriever/site/default.js: line 9, col 25, \\\'params\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/retriever/site/default.jshint.js");

;eval("define(\"offcourse/tests/routes/sites.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/sites.js should pass jshint\', function() { \n      ok(false, \'routes/sites.js should pass jshint.\\nroutes/sites.js: line 15, col 11, \\\'domainId\\\' is defined but never used.\\nroutes/sites.js: line 39, col 19, \\\'params\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/sites.jshint.js");

;eval("define(\"offcourse/tests/routes/sites/site.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/sites\');\n    test(\'routes/sites/site.js should pass jshint\', function() { \n      ok(false, \'routes/sites/site.js should pass jshint.\\nroutes/sites/site.js: line 16, col 78, Missing semicolon.\\nroutes/sites/site.js: line 5, col 28, \\\'transition\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/sites/site.jshint.js");

;eval("define(\"offcourse/tests/routes/topics.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/topics.js should pass jshint\', function() { \n      ok(false, \'routes/topics.js should pass jshint.\\nroutes/topics.js: line 27, col 9, \\\'Bootstrap\\\' is not defined.\\nroutes/topics.js: line 16, col 11, \\\'that\\\' is defined but never used.\\nroutes/topics.js: line 32, col 19, \\\'params\\\' is defined but never used.\\n\\n3 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/topics.jshint.js");

;eval("define(\"offcourse/tests/routes/topics/default.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/topics\');\n    test(\'routes/topics/default.js should pass jshint\', function() { \n      ok(false, \'routes/topics/default.js should pass jshint.\\nroutes/topics/default.js: line 15, col 6, Unnecessary semicolon.\\nroutes/topics/default.js: line 9, col 25, \\\'params\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/topics/default.jshint.js");

;eval("define(\"offcourse/tests/routes/topics/topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/topics\');\n    test(\'routes/topics/topic.js should pass jshint\', function() { \n      ok(false, \'routes/topics/topic.js should pass jshint.\\nroutes/topics/topic.js: line 5, col 28, \\\'transition\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/topics/topic.jshint.js");

;eval("define(\"offcourse/tests/test-helper\", \n  [\"offcourse/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=offcourse/tests/test-helper.js");

;eval("define(\"offcourse/tests/transforms/raw.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - transforms\');\n    test(\'transforms/raw.js should pass jshint\', function() { \n      ok(true, \'transforms/raw.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/transforms/raw.jshint.js");

;eval("define(\"offcourse/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'adapter:application\', \'ApplicationAdapter\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });//# sourceURL=offcourse/tests/unit/adapters/application-test.js");

;eval("define(\"offcourse/tests/unit/components/post-details-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent(\'post-details\', \'PostDetailsComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=offcourse/tests/unit/components/post-details-test.js");

;eval("define(\"offcourse/tests/unit/components/summary-topic-list-item-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent(\'summary-topic-list-item\', \'SummaryTopicListItemComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=offcourse/tests/unit/components/summary-topic-list-item-test.js");

;eval("define(\"offcourse/tests/unit/components/summary-topic-list-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent(\'summary-topic-list\', \'SummaryTopicListComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=offcourse/tests/unit/components/summary-topic-list-test.js");

;eval("define(\"offcourse/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:application\', \'ApplicationController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=offcourse/tests/unit/controllers/application-test.js");

;eval("define(\"offcourse/tests/unit/controllers/modal-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:modal\', \'ModalController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=offcourse/tests/unit/controllers/modal-test.js");

;eval("define(\"offcourse/tests/unit/controllers/modal/topic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:modal/topic\', \'ModalTopicController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=offcourse/tests/unit/controllers/modal/topic-test.js");

;eval("define(\"offcourse/tests/unit/controllers/topics-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:topics\', \'TopicsController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=offcourse/tests/unit/controllers/topics-test.js");

;eval("define(\"offcourse/tests/unit/models/category-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'category\', \'Category\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=offcourse/tests/unit/models/category-test.js");

;eval("define(\"offcourse/tests/unit/models/site-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'site\', \'Site\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=offcourse/tests/unit/models/site-test.js");

;eval("define(\"offcourse/tests/unit/models/topic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'topic\', \'Topic\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=offcourse/tests/unit/models/topic-test.js");

;eval("define(\"offcourse/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:application\', \'ApplicationRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/application-test.js");

;eval("define(\"offcourse/tests/unit/routes/categories-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:categories\', \'CategoriesRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/categories-test.js");

;eval("define(\"offcourse/tests/unit/routes/categories/category-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:categories/category\', \'CategoriesCategoryRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/categories/category-test.js");

;eval("define(\"offcourse/tests/unit/routes/categories/category/topic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:categories/category/topic\', \'CategoriesCategoryTopicRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/categories/category/topic-test.js");

;eval("define(\"offcourse/tests/unit/routes/sites-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:sites\', \'SitesRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/sites-test.js");

;eval("define(\"offcourse/tests/unit/routes/topics-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:topics\', \'TopicsRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/topics-test.js");

;eval("define(\"offcourse/tests/unit/transforms/raw-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'transform:raw\', \'RawTransform\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var transform = this.subject();\n      ok(transform);\n    });\n  });//# sourceURL=offcourse/tests/unit/transforms/raw-test.js");

;eval("define(\"offcourse/tests/unit/views/modal-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'view:modal\', \'ModalView\');\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var view = this.subject();\n      ok(view);\n    });\n  });//# sourceURL=offcourse/tests/unit/views/modal-test.js");

;eval("define(\"offcourse/tests/views/modal.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/modal.js should pass jshint\', function() { \n      ok(true, \'views/modal.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/views/modal.jshint.js");

;eval("define(\"offcourse/tests/views/modal/topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views/modal\');\n    test(\'views/modal/topic.js should pass jshint\', function() { \n      ok(true, \'views/modal/topic.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/views/modal/topic.jshint.js");

;eval("define(\"offcourse/transforms/raw\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Transform.extend({\n      deserialize: function(serialized) {\n        return serialized;\n      },\n\n      serialize: function(deserialized) {\n        return deserialized;\n      }\n    });\n  });//# sourceURL=offcourse/transforms/raw.js");

/* jshint ignore:start */

define('offcourse/config/environment', ['ember'], function(Ember) {
  var prefix = 'offcourse';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('offcourse/tests/test-helper');
} else {
  require('offcourse/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
