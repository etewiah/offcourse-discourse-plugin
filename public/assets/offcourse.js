eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"offcourse/adapters/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // import DS from \'ember-data\';\n\n    // export default DS.RESTAdapter.extend({\n    // });\n    __exports__[\"default\"] = EmberPouch.Adapter.extend({\n      db: new PouchDB(\'offcoursedb\')\n    });\n  });//# sourceURL=offcourse/adapters/application.js");

;eval("define(\"offcourse/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=offcourse/app.js");

;eval("define(\"offcourse/components/multiselect-checkbox-option\", \n  [\"ember-multiselect-checkboxes/components/multiselect-checkbox-option\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var MultiselectCheckboxOptionComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = MultiselectCheckboxOptionComponent;\n  });//# sourceURL=offcourse/components/multiselect-checkbox-option.js");

;eval("define(\"offcourse/components/multiselect-checkboxes\", \n  [\"ember-multiselect-checkboxes/components/multiselect-checkboxes\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var MultiselectCheckboxesComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = MultiselectCheckboxesComponent;\n  });//# sourceURL=offcourse/components/multiselect-checkboxes.js");

;eval("define(\"offcourse/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    	// http://stackoverflow.com/questions/22122570/ember-js-network-connectivity-check-at-startup-and-listener\n\n\n      isOnline: true,  // assume we\'re online until proven wrong\n      init: function () {\n        // this.updateNetworkStatus();\n      },\n\n      updateNetworkStatus: function () {\n        var appController = this;\n        if (!navigator.onLine) {\n          this.set(\'isOnline\', false);\n          return; // return early, no point in pinging the server if we have no LAN\n        }\n        Ember.$.get(\'http://happensesame.com\').done(function () {\n          // todo: consider checking the result\n          appController.set(\'isOnline\', true);\n        }).fail(function () {\n          appController.set(\'isOnline\', false);    \n        }).always(function () {\n          Ember.run.later(appController, \'updateNetworkStatus\', 60000);\n        });\n      } \n\n    });\n  });//# sourceURL=offcourse/controllers/application.js");

;eval("define(\"offcourse/initializers/export-application-global\", \n  [\"ember\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=offcourse/initializers/export-application-global.js");

;eval("define(\"offcourse/models/category\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      \n    });\n  });//# sourceURL=offcourse/models/category.js");

;eval("define(\"offcourse/models/site\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      title: DS.attr(\'string\'),\n      url: DS.attr(\'string\'),\n      isActive: DS.attr(\'boolean\'),\n      rev: DS.attr(\'string\')\n    });\n  });//# sourceURL=offcourse/models/site.js");

;eval("define(\"offcourse/models/topic\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      // primaryKey: \'id\',\n      // id: DS.attr(\'string\'),\n      title: DS.attr(\'string\'),\n      post_stream: DS.attr(\'raw\'),\n      rev: DS.attr(\'string\')\n    });\n  });//# sourceURL=offcourse/models/topic.js");

;eval("define(\"offcourse/router\", \n  [\"ember\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'sites\', function() { });\n      // this.resource(\'categories\', function() { });\n      this.resource(\'categories\', {\n        path: \'/online/categories\'\n      }, function() {\n        this.route(\'default\', {\n          path: \'/\'\n        });\n        // had to add above to prevent view getting rendered twice on homepage..\n        this.resource(\'categories.category\', {\n          path: \'/:slug\'\n        }, function() {\n          this.route(\'default\', {\n            path: \'/\'\n          });\n          this.resource(\'categories.category.topic\', {\n            path: \'/:id\'\n          }, function() {\n\n            this.route(\'default\', {\n              path: \'/\'\n            });\n          });\n        });\n      });\n\n      this.route(\'categories/category\');\n      // this.route(\'categories/category/topic\');\n      this.resource(\'topics\', function() { \n          this.resource(\'topics.topic\', {\n            path: \'/:id\'\n          }, function() {\n\n            this.route(\'default\', {\n              path: \'/\'\n            });\n          });\n        });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=offcourse/router.js");

;eval("define(\"offcourse/routes/categories\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function(params) {\n       var url = \"/categories.json\";\n        // \"http://meta.discourse.org/categories.json\";\n       // \"http://klavado.com/categories.json\"\n       var result = $.getJSON(url).then(\n          function(response) {\n          	// debugger;\n          	return response;\n            // return response.data.children.map(function (child) {\n            //   return App.RedditLink.create(child.data);\n            // });\n          }\n        );\n       return result;\n      },\n\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n      }\n    });\n  });//# sourceURL=offcourse/routes/categories.js");

;eval("define(\"offcourse/routes/categories/category\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        saveTopicsOffline: function() {\n          var selectedTopics = this.controller.get(\'selectedTopics\');\n          selectedTopics.forEach(function(topic) {\n            var url = \"/t/\" + topic.id + \".json\";\n            var that = this;\n            var result = $.getJSON(url).then(\n              function(response) {\n                var pouchTopic = that.store.createRecord(\'topic\', {\n                  title: topic.title,\n                  post_stream: topic.post_stream,\n                  id: topic.id\n                });\n                pouchTopic.save();\n              }\n            );\n\n          }.bind(this));\n        }\n      },\n      model: function(params) {\n        var url = \"/c/\" + params.slug + \".json\";\n        var result = $.getJSON(url).then(\n          function(response) {\n            response.category_slug = params.slug;\n            return response;\n            // return response.data.children.map(function (child) {\n            //   return App.RedditLink.create(child.data);\n            // });\n          }\n        );\n        return result;\n      },\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n        controller.set(\'selectedTopics\', []);\n      }\n\n\n    });\n  });//# sourceURL=offcourse/routes/categories/category.js");

;eval("define(\"offcourse/routes/categories/category/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        // saveOffline: function() {\n        //   var store = this.store;\n        //   var model = this.controller.get(\'model\');\n        //   var topic = store.createRecord(\'topic\', {\n        //     title: model.title,\n        //     post_stream: model.post_stream,\n        //     id: model.id\n        //   });\n        //   topic.save();\n\n        // },\n        // retrieveFromPouchDb: function() {\n        //   var model_id = this.controller.get(\'model.id\');\n        //   var topic = this.store.find(\'topic\', model_id);\n        //   topic.then(function(res){\n        //   });\n        //   var topics = this.store.find(\'topic\');\n        //   topics.then(function(res){\n        //   });\n\n        // }\n      },\n\n      model: function(params) {\n        var url = \"/t/\" + params.id + \".json\";\n        var result = $.getJSON(url).then(\n          function(response) {\n            return response;\n          }\n        );\n        return result;\n      },\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n        var categoryController = this.controllerFor(\'categories.category\');\n        categoryController.set(\'isTopicView\', true);\n        controller.set(\'category_slug\', categoryController.get(\'model.category_slug\'));\n      },\n      deactivate: function() {\n        var categoryController = this.controllerFor(\'categories.category\');\n        categoryController.set(\'isTopicView\', false);\n      }\n\n\n    });\n  });//# sourceURL=offcourse/routes/categories/category/topic.js");

;eval("define(\"offcourse/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      beforeModel: function() {\n        this.transitionTo(\'categories\');\n      }\n\n    });\n  });//# sourceURL=offcourse/routes/index.js");

;eval("define(\"offcourse/routes/sites\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function(params) {\n        // var store = this.store;\n\n        // var site = store.createRecord(\'site\', {\n        //   title: \'Rails is Omakase\',\n        // });\n        // site.save();\n\n        return this.store.find(\'site\');\n      },\n\n      // setupController: function(controller, model) {\n      //   controller.set(\'content\', model);\n      // }\n    });\n  });//# sourceURL=offcourse/routes/sites.js");

;eval("define(\"offcourse/routes/topics\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({});\n\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n      },\n\n      model: function(params) {\n        var topics = this.store.find(\'topic\');\n        topics.then(function(res) {\n        });\n        return topics;\n      },\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n      },\n      // deactivate: function() {\n      //   var categoryController = this.controllerFor(\'categories.category\');\n      //   categoryController.set(\'isTopicView\', false);\n      // }\n\n\n    });\n  });//# sourceURL=offcourse/routes/topics.js");

;eval("define(\"offcourse/routes/topics/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      actions: {\n        // saveOffline: function() {\n        //   var store = this.store;\n        //   var model = this.controller.get(\'model\');\n        //   var topic = store.createRecord(\'topic\', {\n        //     title: model.title,\n        //     id: model.id\n        //   });\n        //   topic.save();\n\n        // },\n        // retrieveFromPouchDb: function() {\n        //   var model_id = this.controller.get(\'model.id\');\n        //   var topic = this.store.find(\'topic\', model_id);\n        //   topic.then(function(res){\n        //     debugger;\n        //   });\n        //   var topics = this.store.find(\'topic\');\n        //   topics.then(function(res){\n        //     debugger;\n        //   });\n\n        // }\n      },\n\n      model: function(params) {\n        var url = \"/t/\" + params.id + \".json\";\n        var result = $.getJSON(url).then(\n          function(response) {\n            return response;\n            // return response.data.children.map(function (child) {\n            //   return App.RedditLink.create(child.data);\n            // });\n          }\n        );\n        return result;\n      },\n      setupController: function(controller, model) {\n        controller.set(\'model\', model);\n      }\n\n    });\n  });//# sourceURL=offcourse/routes/topics/topic.js");

;eval("define(\"offcourse/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" Offcourse \");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\" Online\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\" Offline \");\n      }\n\n      data.buffer.push(\"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n\\n      <div class=\\\"navbar-brand\\\" id=\'title\'>\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n        <small>View discourse topics offline\\n        </small>\\n\\n      </div>\\n\\n    </div>\\n\\n\\n\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n        <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"topics\", options) : helperMissing.call(depth0, \"link-to\", \"topics\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container offcourse-main\\\">\\n\\n  <div class=\\\"row\\\">\\n  </div>\\n\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/application.js");

;eval("define(\"offcourse/templates/categories\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n	<li>\\n		\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"categories.category\", \"item.slug\", options) : helperMissing.call(depth0, \"link-to\", \"categories.category\", \"item.slug\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</li>\\n	\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n		  \");\n      stack1 = helpers._triageMustache.call(depth0, \"item.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"categories-list\\\">\\n	Pick a category:\\n\\n	<ul>\\n\\n	\");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.category_list.categories\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	</ul>\\n\\n</div>\\n\\n<div class=\\\"topics-list\\\" >\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/categories.js");

;eval("define(\"offcourse/templates/categories/category\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  <div class=\\\"selectable-topics\\\">\\n\\nSelect topics below <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveTopicsOffline\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" > and click here to save offline </button>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'multiselect-checkboxes\'] || (depth0 && depth0[\'multiselect-checkboxes\']),options={hash:{\n        \'options\': (\"model.topic_list.topics\"),\n        \'labelProperty\': (\"title\"),\n        \'selection\': (\"selectedTopics\")\n      },hashTypes:{\'options\': \"ID\",\'labelProperty\': \"STRING\",\'selection\': \"ID\"},hashContexts:{\'options\': depth0,\'labelProperty\': depth0,\'selection\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"multiselect-checkboxes\", options))));\n      data.buffer.push(\"\\n\\n\\n\\n\\n	</div>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"\\n\");\n      stack1 = helpers.unless.call(depth0, \"isTopicView\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<div>\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/categories/category.js");

;eval("define(\"offcourse/templates/categories/category/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n		   back to topics list\\n		\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n	<div>\\n		  \");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"item.cooked\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n\\n	</div>\\n	\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n		\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"categories.category\", \"model.category_slug\", options) : helperMissing.call(depth0, \"link-to\", \"categories.category\", \"model.category_slug\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveOffline\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" > Save offline </button>\\n\\n		<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"retrieveFromPouchDb\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" > Retrieve Topic from PouchDb </button>\\n\\n</div>\\n\\n<div class=\\\"topic-details\\\">\\n	\\n<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"model.fancy_title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n\\n<div class=\\\"\\\">\\n	<ul>\\n\\n	\");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.post_stream.posts\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	</ul>\\n\\n</div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/categories/category/topic.js");

;eval("define(\"offcourse/templates/components/multiselect-checkbox-option\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<label>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"isSelected\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</label>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/components/multiselect-checkbox-option.js");

;eval("define(\"offcourse/templates/components/multiselect-checkboxes\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'multiselect-checkbox-option\'] || (depth0 && depth0[\'multiselect-checkbox-option\']),options={hash:{\n        \'value\': (\"option\"),\n        \'labelProperty\': (\"labelProperty\"),\n        \'selection\': (\"selection\")\n      },hashTypes:{\'value\': \"ID\",\'labelProperty\': \"ID\",\'selection\': \"ID\"},hashContexts:{\'value\': depth0,\'labelProperty\': depth0,\'selection\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"multiselect-checkbox-option\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      stack1 = helpers.each.call(depth0, \"option\", \"in\", \"options\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/components/multiselect-checkboxes.js");

;eval("define(\"offcourse/templates/sites\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n<li>\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"item.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</li>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"Pick a site:\\n\\n<ul>\\n\\n\");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n</ul>\\n\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/sites.js");

;eval("define(\"offcourse/templates/topics\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n          <li>\\n            \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"topics.topic\", \"topic.id\", options) : helperMissing.call(depth0, \"link-to\", \"topics.topic\", \"topic.id\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n          </li>\\n          \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"topic.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"offline-topics\\\">\\n\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"bs-sidebar hidden-print affix-top\\\" role=\\\"complementary\\\">\\n      Offlint ts:\\n      <ul class=\\\"nav bs-sidenav\\\">\\n        <ul>\\n\\n          \");\n      stack1 = helpers.each.call(depth0, \"topic\", \"in\", \"model.content\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n        </ul>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-9\\\" role=\\\"main\\\">\\n  	\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/topics.js");

;eval("define(\"offcourse/templates/topics/topic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n      <li class=\\\"list-group-item\\\">\\n        \");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"item.cooked\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n      </li>\\n      \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n\\n</div>\\n\\n<div class=\\\"topic-details\\\">\\n\\n  <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"model.fancy_title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n    </div>\\n\\n    <ul class=\\\"list-group\\\">\\n\\n      \");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.post_stream.posts\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n    </ul>\\n\\n  </div>\\n\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=offcourse/templates/topics/topic.js");

;eval("define(\"offcourse/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(false, \'adapters/application.js should pass jshint.\\nadapters/application.js: line 5, col 16, \\\'EmberPouch\\\' is not defined.\\nadapters/application.js: line 6, col 11, \\\'PouchDB\\\' is not defined.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/adapters/application.jshint.js");

;eval("define(\"offcourse/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/app.jshint.js");

;eval("define(\"offcourse/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/controllers/application.jshint.js");

;eval("define(\"offcourse/tests/helpers/resolver\", \n  [\"ember/resolver\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=offcourse/tests/helpers/resolver.js");

;eval("define(\"offcourse/tests/helpers/start-app\", \n  [\"ember\",\"offcourse/app\",\"offcourse/router\",\"offcourse/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=offcourse/tests/helpers/start-app.js");

;eval("define(\"offcourse/tests/models/category.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/category.js should pass jshint\', function() { \n      ok(true, \'models/category.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/models/category.jshint.js");

;eval("define(\"offcourse/tests/models/site.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/site.js should pass jshint\', function() { \n      ok(true, \'models/site.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/models/site.jshint.js");

;eval("define(\"offcourse/tests/models/topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/topic.js should pass jshint\', function() { \n      ok(true, \'models/topic.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/models/topic.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/helpers\');\n    test(\'offcourse/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/helpers/resolver.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/helpers\');\n    test(\'offcourse/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/helpers/start-app.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests\');\n    test(\'offcourse/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/test-helper.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/adapters/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/adapters\');\n    test(\'offcourse/tests/unit/adapters/application-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/adapters/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/adapters/application-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/controllers\');\n    test(\'offcourse/tests/unit/controllers/application-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/controllers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/controllers/application-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/models/category-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/models\');\n    test(\'offcourse/tests/unit/models/category-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/models/category-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/models/category-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/models/site-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/models\');\n    test(\'offcourse/tests/unit/models/site-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/models/site-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/models/site-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/models/topic-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/models\');\n    test(\'offcourse/tests/unit/models/topic-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/models/topic-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/models/topic-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/categories-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes\');\n    test(\'offcourse/tests/unit/routes/categories-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/categories-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/categories-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/categories/category-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes/categories\');\n    test(\'offcourse/tests/unit/routes/categories/category-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/categories/category-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/categories/category-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/categories/category/topic-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes/categories/category\');\n    test(\'offcourse/tests/unit/routes/categories/category/topic-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/categories/category/topic-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/categories/category/topic-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/sites-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes\');\n    test(\'offcourse/tests/unit/routes/sites-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/sites-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/sites-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/routes/topics-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/routes\');\n    test(\'offcourse/tests/unit/routes/topics-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/routes/topics-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/routes/topics-test.jshint.js");

;eval("define(\"offcourse/tests/offcourse/tests/unit/transforms/raw-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - offcourse/tests/unit/transforms\');\n    test(\'offcourse/tests/unit/transforms/raw-test.js should pass jshint\', function() { \n      ok(true, \'offcourse/tests/unit/transforms/raw-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/offcourse/tests/unit/transforms/raw-test.jshint.js");

;eval("define(\"offcourse/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/router.jshint.js");

;eval("define(\"offcourse/tests/routes/categories.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/categories.js should pass jshint\', function() { \n      ok(false, \'routes/categories.js should pass jshint.\\nroutes/categories.js: line 9, col 17, \\\'$\\\' is not defined.\\nroutes/categories.js: line 5, col 19, \\\'params\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/categories.jshint.js");

;eval("define(\"offcourse/tests/routes/categories/category.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/categories\');\n    test(\'routes/categories/category.js should pass jshint\', function() { \n      ok(false, \'routes/categories/category.js should pass jshint.\\nroutes/categories/category.js: line 10, col 22, \\\'$\\\' is not defined.\\nroutes/categories/category.js: line 26, col 18, \\\'$\\\' is not defined.\\nroutes/categories/category.js: line 10, col 13, \\\'result\\\' is defined but never used.\\nroutes/categories/category.js: line 11, col 20, \\\'response\\\' is defined but never used.\\n\\n4 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/categories/category.jshint.js");

;eval("define(\"offcourse/tests/routes/categories/category/topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/categories/category\');\n    test(\'routes/categories/category/topic.js should pass jshint\', function() { \n      ok(false, \'routes/categories/category/topic.js should pass jshint.\\nroutes/categories/category/topic.js: line 30, col 18, \\\'$\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/categories/category/topic.jshint.js");

;eval("define(\"offcourse/tests/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/index.js should pass jshint\', function() { \n      ok(true, \'routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/index.jshint.js");

;eval("define(\"offcourse/tests/routes/sites.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/sites.js should pass jshint\', function() { \n      ok(false, \'routes/sites.js should pass jshint.\\nroutes/sites.js: line 5, col 19, \\\'params\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/sites.jshint.js");

;eval("define(\"offcourse/tests/routes/topics.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/topics.js should pass jshint\', function() { \n      ok(false, \'routes/topics.js should pass jshint.\\nroutes/topics.js: line 11, col 19, \\\'params\\\' is defined but never used.\\nroutes/topics.js: line 13, col 26, \\\'res\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/topics.jshint.js");

;eval("define(\"offcourse/tests/routes/topics/topic.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/topics\');\n    test(\'routes/topics/topic.js should pass jshint\', function() { \n      ok(false, \'routes/topics/topic.js should pass jshint.\\nroutes/topics/topic.js: line 31, col 18, \\\'$\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=offcourse/tests/routes/topics/topic.jshint.js");

;eval("define(\"offcourse/tests/test-helper\", \n  [\"offcourse/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=offcourse/tests/test-helper.js");

;eval("define(\"offcourse/tests/transforms/raw.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - transforms\');\n    test(\'transforms/raw.js should pass jshint\', function() { \n      ok(true, \'transforms/raw.js should pass jshint.\'); \n    });\n  });//# sourceURL=offcourse/tests/transforms/raw.jshint.js");

;eval("define(\"offcourse/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'adapter:application\', \'ApplicationAdapter\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });//# sourceURL=offcourse/tests/unit/adapters/application-test.js");

;eval("define(\"offcourse/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:application\', \'ApplicationController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=offcourse/tests/unit/controllers/application-test.js");

;eval("define(\"offcourse/tests/unit/models/category-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'category\', \'Category\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=offcourse/tests/unit/models/category-test.js");

;eval("define(\"offcourse/tests/unit/models/site-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'site\', \'Site\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=offcourse/tests/unit/models/site-test.js");

;eval("define(\"offcourse/tests/unit/models/topic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'topic\', \'Topic\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=offcourse/tests/unit/models/topic-test.js");

;eval("define(\"offcourse/tests/unit/routes/categories-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:categories\', \'CategoriesRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/categories-test.js");

;eval("define(\"offcourse/tests/unit/routes/categories/category-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:categories/category\', \'CategoriesCategoryRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/categories/category-test.js");

;eval("define(\"offcourse/tests/unit/routes/categories/category/topic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:categories/category/topic\', \'CategoriesCategoryTopicRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/categories/category/topic-test.js");

;eval("define(\"offcourse/tests/unit/routes/sites-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:sites\', \'SitesRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/sites-test.js");

;eval("define(\"offcourse/tests/unit/routes/topics-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:topics\', \'TopicsRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=offcourse/tests/unit/routes/topics-test.js");

;eval("define(\"offcourse/tests/unit/transforms/raw-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'transform:raw\', \'RawTransform\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var transform = this.subject();\n      ok(transform);\n    });\n  });//# sourceURL=offcourse/tests/unit/transforms/raw-test.js");

;eval("define(\"offcourse/transforms/raw\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Transform.extend({\n      deserialize: function(serialized) {\n        return serialized;\n      },\n\n      serialize: function(deserialized) {\n        return deserialized;\n      }\n    });\n  });//# sourceURL=offcourse/transforms/raw.js");

/* jshint ignore:start */

define('offcourse/config/environment', ['ember'], function(Ember) {
  var prefix = 'offcourse';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('offcourse/tests/test-helper');
} else {
  require('offcourse/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
