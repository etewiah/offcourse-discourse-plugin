define("offcourse/adapters/application",["exports"],function(e){"use strict";e["default"]=EmberPouch.Adapter.extend({db:new PouchDB("offcoursedb")})}),define("offcourse/app",["ember","ember/resolver","ember/load-initializers","offcourse/config/environment","exports"],function(e,t,s,n,o){"use strict";var a=e["default"],r=t["default"],i=s["default"],u=n["default"];a.MODEL_FACTORY_INJECTIONS=!0;var l=a.Application.extend({modulePrefix:u.modulePrefix,podModulePrefix:u.podModulePrefix,Resolver:r});i(l,u.modulePrefix),o["default"]=l}),define("offcourse/components/multiselect-checkbox-option",["ember-multiselect-checkboxes/components/multiselect-checkbox-option","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s}),define("offcourse/components/multiselect-checkboxes",["ember-multiselect-checkboxes/components/multiselect-checkboxes","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s}),define("offcourse/controllers/application",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Controller.extend({networkIsOnline:!1,init:function(){this.updateNetworkStatus()},updateNetworkStatus:function(){var e=this;s.$.get("https://cors-test.appspot.com/test").done(function(t){"ok"===t.status&&e.set("networkIsOnline",!0)}).fail(function(){e.set("networkIsOnline",!1)}).always(function(){s.run.later(e,"updateNetworkStatus",6e4)})},navigatorIsOnline:function(){return navigator.onLine?!0:!1}.property()})}),define("offcourse/controllers/categories",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Controller.extend({needs:["Application"]})}),define("offcourse/controllers/topics",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Controller.extend({needs:["Application"],noOfflineTopics:function(){var e=this.get("model");return e.content&&e.content.length>0?!1:!0}.property("model")})}),define("offcourse/initializers/export-application-global",["ember","offcourse/config/environment","exports"],function(e,t,s){"use strict";function n(e,t){var s=o.String.classify(a.modulePrefix);a.exportApplicationGlobal&&(window[s]=t)}var o=e["default"],a=t["default"];s.initialize=n,s["default"]={name:"export-application-global",initialize:n}}),define("offcourse/models/category",["ember-data","exports"],function(e,t){"use strict";var s=e["default"],n=s.Model.extend({});n.reopenClass({getIndexApiUrl:function(e){var t="/categories.json";return e&&(t="/remote_discourse/categories.json?host="+e),t},getTopicListApiUrl:function(e,t){var s="/c/"+e+".json";return t&&(s="/remote_discourse/topics_per_category.json?category="+e+"&host="+t),s}}),t["default"]=n}),define("offcourse/models/site",["ember-data","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Model.extend({title:s.attr("string"),slug:s.attr("string"),url:s.attr("string"),isActive:s.attr("boolean"),rev:s.attr("string")})}),define("offcourse/models/topic",["ember-data","exports"],function(e,t){"use strict";var s=e["default"],n=s.Model.extend({originalId:s.attr("string"),sourceSiteId:s.attr("string"),title:s.attr("string"),post_stream:s.attr("raw"),rev:s.attr("string")});n.reopenClass({getTopicDetailsApiUrl:function(e,t){var s="/t/"+e+".json";return t&&(s="/remote_discourse/topic_details.json?topic_id="+e+"&host="+t),s},findOrCreate:function(e,t,s){return e.find(t,s.id).then(null,function(){return function(){var n;return n=e.recordForId(t,s.id),n.loadedData(),n.setProperties(s),n.save()}}(this))}}),t["default"]=n}),define("offcourse/router",["ember","offcourse/config/environment","exports"],function(e,t,s){"use strict";var n=e["default"],o=t["default"],a=n.Router.extend({location:o.locationType});a.map(function(){this.resource("sites",function(){}),this.resource("categories",{path:"/retrieve/cats"},function(){this.route("default",{path:"/"}),this.resource("categories.category",{path:"/:slug"},function(){this.route("default",{path:"/"}),this.resource("categories.category.topic",{path:"/:id"},function(){this.route("default",{path:"/"})})})}),this.resource("topics",{path:"/offline/topics"},function(){this.resource("topics.topic",{path:"/:id"},function(){this.route("default",{path:"/"})})})}),s["default"]=a}),define("offcourse/routes/categories",["ember","offcourse/models/category","exports"],function(e,t,s){"use strict";var n=e["default"],o=t["default"];s["default"]=n.Route.extend({actions:{changeDomain:function(){var e=this.controller.get("domainUrl"),t=/^(ftp|http|https):\/\/[^ "]+$/.test(e);if(t){var s=e.split("/")[2]||e.split("/")[0],n=s.replace(/\./g," "),a=s.replace(/\./g,"_");this.controller.set("currentSourceId",a),this.controller.set("currentSourceUrl",e);var r=o.getIndexApiUrl(e);this.store.createRecord("site",{title:n,url:e,id:a}),this.controller.set("model",[]);var i=this;$.getJSON(r).then(function(e){i.controller.set("model",e),i.transitionTo("categories")})}}},model:function(){var e=this.controllerFor("categories").get("currentSourceUrl");e||(e="http://klavado.com",this.controllerFor("categories").set("currentSourceUrl",e));var t=o.getIndexApiUrl(e),s=$.getJSON(t).then(function(e){return e});return s},setupController:function(e,t){e.set("model",t);var s=this.store.find("topic");s.then(function(e){this.controller.set("offlineTopicsCount",e.content.length)}.bind(this))}})}),define("offcourse/routes/categories/category",["ember","offcourse/models/category","offcourse/models/topic","exports"],function(e,t,s,n){"use strict";var o=e["default"],a=t["default"],r=s["default"];n["default"]=o.Route.extend({actions:{saveTopicsOffline:function(){var e=this.controllerFor("categories"),t=e.get("currentSourceUrl"),s=e.get("currentSourceId")||"klavado",n=this.controller.get("selectedTopics");!n||n.length<1?Bootstrap.GNM.push("ERROR!","Please select topics to save","error"):Bootstrap.GNM.push("SUCCESS!","Selected topics added","success"),n.forEach(function(e){{var n=r.getTopicDetailsApiUrl(e.id,t),o=this;$.getJSON(n).then(function(e){var t=s+"_"+e.id,n={title:e.title,post_stream:e.post_stream,originalId:e.id,sourceSiteId:s,id:t};r.findOrCreate(o.store,"topic",n)})}}.bind(this))},error:function(e){return e&&404===e.status?this.transitionTo("categories"):!1}},model:function(e){var t=this.controllerFor("categories").get("currentSourceUrl"),s=a.getTopicListApiUrl(e.slug,t),n=$.getJSON(s).then(function(t){return t.category_slug=e.slug,t},function(e){return e});return n},setupController:function(e,t){e.set("model",t),e.set("selectedTopics",[])}})}),define("offcourse/routes/categories/category/topic",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Route.extend({actions:{},model:function(e){var t="/t/"+e.id+".json",s=$.getJSON(t).then(function(e){return e});return s},setupController:function(e,t){e.set("model",t);var s=this.controllerFor("categories.category");s.set("isTopicView",!0),e.set("category_slug",s.get("model.category_slug"))},deactivate:function(){var e=this.controllerFor("categories.category");e.set("isTopicView",!1)}})}),define("offcourse/routes/index",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Route.extend({beforeModel:function(){this.transitionTo("topics")}})}),define("offcourse/routes/sites",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Route.extend({model:function(){return this.store.find("site")}})}),define("offcourse/routes/topics",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Route.extend({});var s=e["default"];t["default"]=s.Route.extend({actions:{destroyAllOfflineTopics:function(){this.get("store").findAll("topic").then(function(e){e.content.forEach(function(e){s.run.once(this,function(){e.deleteRecord(),e.save()})},this)}).then(function(){Bootstrap.GNM.push("SUCCESS!","All offline topics removed!","success")}.bind(this))}},model:function(){var e=this.store.find("topic");return e},setupController:function(e,t){e.set("model",t),this.controller.set("offlineTopicsCount",t.content.length)}})}),define("offcourse/routes/topics/topic",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Route.extend({actions:{error:function(e){return e?this.transitionTo("topics"):!1}},model:function(e){var t=this.store.find("topic",e.id);return t},setupController:function(e,t){e.set("model",t.get("data"))}})}),define("offcourse/templates/application",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){function r(e,t){t.buffer.push(" Offcourse ")}function i(e,t){t.buffer.push("\n        <span>Navigator is online</span>\n      ")}function u(e,t){t.buffer.push("\n        <span>Navigator is offline</span>\n      ")}function l(e,t){t.buffer.push("\n        <span>Network is online</span>\n      ")}function c(e,t){t.buffer.push("\n        <span>Network is offline</span>\n      ")}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var f,h,p,d="",b=this,v=n.helperMissing,m=this.escapeExpression;return a.buffer.push('<nav class="navbar navbar-default navbar-fixed-top" role="navigation">\n  <div class="container">\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n        <span class="sr-only">Toggle navigation</span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n\n      <div class="navbar-brand" id=\'title\'>\n      <span style="margin:0px">        '),h=n["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(1,r,a),contexts:[t],types:["STRING"],data:a},f=h?h.call(t,"index",p):v.call(t,"link-to","index",p),(f||0===f)&&a.buffer.push(f),a.buffer.push('\n      </span>  \n      <span> - an offline aggregator for discourse forums</span>\n\n      </div>\n\n    </div>\n\n\n\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n\n\n    </div>\n  </div>\n</nav>\n\n<div class="container offcourse-main">\n\n  '),f=n._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(f||0===f)&&a.buffer.push(f),a.buffer.push('\n\n  <div class="row">\n    <div class="well">\n      '),f=n["if"].call(t,"controller.navigatorIsOnline",{hash:{},hashTypes:{},hashContexts:{},inverse:b.program(5,u,a),fn:b.program(3,i,a),contexts:[t],types:["ID"],data:a}),(f||0===f)&&a.buffer.push(f),a.buffer.push("\n      "),f=n["if"].call(t,"controller.networkIsOnline",{hash:{},hashTypes:{},hashContexts:{},inverse:b.program(9,c,a),fn:b.program(7,l,a),contexts:[t],types:["ID"],data:a}),(f||0===f)&&a.buffer.push(f),a.buffer.push("\n    </div>\n  </div>\n</div>\n"),a.buffer.push(m((h=n["bs-growl-notifications"]||t&&t["bs-growl-notifications"],p={hash:{showTime:"4000"},hashTypes:{showTime:"STRING"},hashContexts:{showTime:t},contexts:[],types:[],data:a},h?h.call(t,p):v.call(t,"bs-growl-notifications",p)))),a.buffer.push("\n"),d})}),define("offcourse/templates/categories",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){function r(e,t){t.buffer.push(" offline. ")}function i(e,t){var s,o,a,r="";return t.buffer.push("\n      <li>\n        "),o=n["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(4,u,t),contexts:[e,e],types:["STRING","ID"],data:t},s=o?o.call(e,"categories.category","item.slug",a):v.call(e,"link-to","categories.category","item.slug",a),(s||0===s)&&t.buffer.push(s),t.buffer.push("\n      </li>\n      "),r}function u(e,t){var s,o="";return t.buffer.push(" "),s=n._triageMustache.call(e,"item.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push(" "),o}function l(e,t){var s,o,a,i="";return t.buffer.push("\n  <span>You have "),s=n._triageMustache.call(e,"offlineTopicsCount",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push(" topics viewable "),o=n["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(1,r,t),contexts:[e],types:["STRING"],data:t},s=o?o.call(e,"topics",a):v.call(e,"link-to","topics",a),(s||0===s)&&t.buffer.push(s),t.buffer.push("</span>\n  "),i}function c(e,t){t.buffer.push("\n  <span>You do not have topics viewable offline.</span>\n  ")}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var f,h,p,d="",b=this,v=n.helperMissing,m=this.escapeExpression;return a.buffer.push("<div>\n  <h3>Select topics to view "),h=n["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(1,r,a),contexts:[t],types:["STRING"],data:a},f=h?h.call(t,"topics",p):v.call(t,"link-to","topics",p),(f||0===f)&&a.buffer.push(f),a.buffer.push('</h3>\n</div>\n<div class="row">\n  <div class="col-md-4">\n    <h6 style="margin-top: 5px;">Displaying info from '),f=n._triageMustache.call(t,"currentSourceUrl",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(f||0===f)&&a.buffer.push(f),a.buffer.push('. \n      Enter the base url for a discourse site to retrieve topics from that site:\n    </h6>\n  </div>\n  <div class="col-md-8">\n    <form class="domain-form" '),a.buffer.push(m(n.action.call(t,"changeDomain",{hash:{on:"submit"},hashTypes:{on:"STRING"},hashContexts:{on:t},contexts:[t],types:["STRING"],data:a}))),a.buffer.push('>\n      <table>\n        <tr class="input">\n          <td style="">\n            '),a.buffer.push(m((h=n.input||t&&t.input,p={hash:{placeholder:"eg: https://meta.discourse.org",value:"domainUrl",id:"domain-url",autofocus:"autofocus"},hashTypes:{placeholder:"STRING",value:"ID",id:"STRING",autofocus:"STRING"},hashContexts:{placeholder:t,value:t,id:t,autofocus:t},contexts:[],types:[],data:a},h?h.call(t,p):v.call(t,"input",p)))),a.buffer.push("\n          </td>\n          <td>\n            <button class='btn btn-small btn-primary' "),a.buffer.push(m(n.action.call(t,"changeDomain",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:a}))),a.buffer.push('>\n              Go\n            </button>\n          </td>\n        </tr>\n\n        <tr class="instructions">\n          <td>\n            <label></label>\n          </td>\n        </tr>\n      </table>\n    </form>\n  </div>\n\n</div>\n\n<div class="row" style="margin-top:20px">\n  <div class="col-md-3 categories-list">\n    Pick a category:\n\n    <ul>\n\n      '),f=n.each.call(t,"item","in","model.category_list.categories",{hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(3,i,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a}),(f||0===f)&&a.buffer.push(f),a.buffer.push('\n\n    </ul>\n\n  </div>\n\n  <div class="col-md-9 topics-list">\n    '),f=n._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(f||0===f)&&a.buffer.push(f),a.buffer.push('\n  </div>\n\n</div>\n\n<div class="row">\n\n  '),f=n["if"].call(t,"offlineTopicsCount",{hash:{},hashTypes:{},hashContexts:{},inverse:b.program(8,c,a),fn:b.program(6,l,a),contexts:[t],types:["ID"],data:a}),(f||0===f)&&a.buffer.push(f),a.buffer.push("\n\n</div>\n"),d})}),define("offcourse/templates/categories/category",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){function r(e,t){var s,o,a="";return t.buffer.push('\n  <div class="selectable-topics">\n\nSelect topics below <button '),t.buffer.push(l(n.action.call(e,"saveTopicsOffline",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(" > and click here to save offline </button>\n\n"),t.buffer.push(l((s=n["multiselect-checkboxes"]||e&&e["multiselect-checkboxes"],o={hash:{options:"model.topic_list.topics",labelProperty:"title",selection:"selectedTopics"},hashTypes:{options:"ID",labelProperty:"STRING",selection:"ID"},hashContexts:{options:e,labelProperty:e,selection:e},contexts:[],types:[],data:t},s?s.call(e,o):c.call(e,"multiselect-checkboxes",o)))),t.buffer.push("\n\n\n\n\n	</div>\n"),a}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var i,u="",l=this.escapeExpression,c=n.helperMissing,f=this;return a.buffer.push("\n"),i=n.unless.call(t,"isTopicView",{hash:{},hashTypes:{},hashContexts:{},inverse:f.noop,fn:f.program(1,r,a),contexts:[t],types:["ID"],data:a}),(i||0===i)&&a.buffer.push(i),a.buffer.push("\n\n<div>\n	"),i=n._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(i||0===i)&&a.buffer.push(i),a.buffer.push("\n</div>"),u})}),define("offcourse/templates/categories/category/topic",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){function r(e,t){t.buffer.push("\n		   back to topics list\n		")}function i(e,t){var s="";return t.buffer.push("\n	<div>\n		  "),t.buffer.push(h(n._triageMustache.call(e,"item.cooked",{hash:{unescaped:"true"},hashTypes:{unescaped:"STRING"},hashContexts:{unescaped:e},contexts:[e],types:["ID"],data:t}))),t.buffer.push("\n\n	</div>\n	"),s}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var u,l,c,f="",h=this.escapeExpression,p=this,d=n.helperMissing;return a.buffer.push('<div class="row">\n		'),l=n["link-to"]||t&&t["link-to"],c={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(1,r,a),contexts:[t,t],types:["STRING","ID"],data:a},u=l?l.call(t,"categories.category","model.category_slug",c):d.call(t,"link-to","categories.category","model.category_slug",c),(u||0===u)&&a.buffer.push(u),a.buffer.push("\n\n		<button "),a.buffer.push(h(n.action.call(t,"saveOffline",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:a}))),a.buffer.push(" > Save offline </button>\n\n		<button "),a.buffer.push(h(n.action.call(t,"retrieveFromPouchDb",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:a}))),a.buffer.push(' > Retrieve Topic from PouchDb </button>\n\n</div>\n\n<div class="topic-details">\n	\n<h4>'),u=n._triageMustache.call(t,"model.fancy_title",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(u||0===u)&&a.buffer.push(u),a.buffer.push('</h4>\n\n<div class="">\n	<ul>\n\n	'),u=n.each.call(t,"item","in","model.post_stream.posts",{hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(3,i,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a}),(u||0===u)&&a.buffer.push(u),a.buffer.push("\n\n	</ul>\n\n</div>\n</div>"),f})}),define("offcourse/templates/components/multiselect-checkbox-option",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var r,i,u,l="",c=n.helperMissing,f=this.escapeExpression;return a.buffer.push("<label>\n  "),a.buffer.push(f((i=n.input||t&&t.input,u={hash:{type:"checkbox",checked:"isSelected"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},i?i.call(t,u):c.call(t,"input",u)))),a.buffer.push("\n  "),r=n._triageMustache.call(t,"label",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</label>\n"),l})}),define("offcourse/templates/components/multiselect-checkboxes",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){function r(e,t){var s,o,a="";return t.buffer.push("\n  "),t.buffer.push(c((s=n["multiselect-checkbox-option"]||e&&e["multiselect-checkbox-option"],o={hash:{value:"option",labelProperty:"labelProperty",selection:"selection"},hashTypes:{value:"ID",labelProperty:"ID",selection:"ID"},hashContexts:{value:e,labelProperty:e,selection:e},contexts:[],types:[],data:t},s?s.call(e,o):l.call(e,"multiselect-checkbox-option",o)))),t.buffer.push("\n"),a}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var i,u="",l=n.helperMissing,c=this.escapeExpression,f=this;return i=n.each.call(t,"option","in","options",{hash:{},hashTypes:{},hashContexts:{},inverse:f.noop,fn:f.program(1,r,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a}),(i||0===i)&&a.buffer.push(i),a.buffer.push("\n"),u})}),define("offcourse/templates/sites",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){function r(e,t){var s,o="";return t.buffer.push("\n<li>\n	"),s=n._triageMustache.call(e,"item.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("\n</li>\n"),o}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var i,u="",l=this;return a.buffer.push("Pick a site:\n\n<ul>\n\n"),i=n.each.call(t,"item","in","model",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(1,r,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a}),(i||0===i)&&a.buffer.push(i),a.buffer.push("\n\n</ul>\n\n\n"),i=n._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(i||0===i)&&a.buffer.push(i),a.buffer.push("\n"),u})}),define("offcourse/templates/topics",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){function r(e,t){var s,o,a,r="";return t.buffer.push("\n<div>\n  <h3>You do not have topics viewable offline. <small>"),o=n["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(2,i,t),contexts:[e],types:["STRING"],data:t},s=o?o.call(e,"categories",a):b.call(e,"link-to","categories",a),(s||0===s)&&t.buffer.push(s),t.buffer.push("</small> </h3>\n</div>\n\n"),r}function i(e,t){t.buffer.push(" Go online to add some. ")}function u(e,t){var s,o,a,r="";return t.buffer.push("\n<div>\n  <h3>Topics available to view offline.  <small>"),o=n["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(5,l,t),contexts:[e],types:["STRING"],data:t},s=o?o.call(e,"categories",a):b.call(e,"link-to","categories",a),(s||0===s)&&t.buffer.push(s),t.buffer.push('</small> </h3>\n</div>\n\n<div class="row offline-topics">\n  <div class="col-md-3">\n    <div class="bs-sidebar hidden-print affix-top" role="complementary">\n      <ul class="nav bs-sidenav">\n        <ul>\n\n          '),s=n.each.call(e,"topic","in","model.content",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(7,c,t),contexts:[e,e,e],types:["ID","ID","ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push('\n\n        </ul>\n\n    </div>\n  </div>\n  <div class="col-md-9" role="main">\n    '),s=n._triageMustache.call(e,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push('\n  </div>\n</div>\n\n<div class="row">\n  <div class="well">\n    <div>\n      <span>You have '),s=n._triageMustache.call(e,"offlineTopicsCount",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push(" topics viewable offline. "),o=n["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(5,l,t),contexts:[e],types:["STRING"],data:t},s=o?o.call(e,"categories",a):b.call(e,"link-to","categories",a),(s||0===s)&&t.buffer.push(s),t.buffer.push('</span>\n    </div>\n    <div>\n      <a href="" '),t.buffer.push(v(n.action.call(e,"destroyAllOfflineTopics",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">Remove all offline topics</a>\n    </div>\n\n    \n  </div>\n</div>\n"),r}function l(e,t){t.buffer.push(" Go online to add more. ")}function c(e,t){var s,o,a,r="";return t.buffer.push("\n          <li>\n            "),o=n["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(8,f,t),contexts:[e,e],types:["STRING","ID"],data:t},s=o?o.call(e,"topics.topic","topic.id",a):b.call(e,"link-to","topics.topic","topic.id",a),(s||0===s)&&t.buffer.push(s),t.buffer.push("\n          </li>\n          "),r}function f(e,t){var s,o="";return t.buffer.push(" "),s=n._triageMustache.call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push(" "),o}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var h,p="",d=this,b=n.helperMissing,v=this.escapeExpression;return a.buffer.push("\n"),h=n["if"].call(t,"noOfflineTopics",{hash:{},hashTypes:{},hashContexts:{},inverse:d.program(4,u,a),fn:d.program(1,r,a),contexts:[t],types:["ID"],data:a}),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n"),p})}),define("offcourse/templates/topics/topic",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,o,a){function r(e,t){var s="";return t.buffer.push('\n      <li class="list-group-item">\n        '),t.buffer.push(l(n._triageMustache.call(e,"item.cooked",{hash:{unescaped:"true"},hashTypes:{unescaped:"STRING"},hashContexts:{unescaped:e},contexts:[e],types:["ID"],data:t}))),t.buffer.push("\n      </li>\n      "),s}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),a=a||{};var i,u="",l=this.escapeExpression,c=this;return a.buffer.push('<div class="row">\n\n</div>\n\n<div class="topic-details">\n\n  <div class="panel panel-default">\n    <div class="panel-heading">\n      <h4>'),i=n._triageMustache.call(t,"model.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(i||0===i)&&a.buffer.push(i),a.buffer.push('</h4>\n    </div>\n\n    <ul class="list-group">\n\n      '),i=n.each.call(t,"item","in","model.post_stream.posts",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,r,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a}),(i||0===i)&&a.buffer.push(i),a.buffer.push("\n\n    </ul>\n\n  </div>\n\n</div>\n"),u})}),define("offcourse/transforms/raw",["ember-data","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Transform.extend({deserialize:function(e){return e},serialize:function(e){return e}})}),define("offcourse/config/environment",["ember"],function(e){var t="offcourse";try{var s=t+"/config/environment",n=e["default"].$('meta[name="'+s+'"]').attr("content"),o=JSON.parse(unescape(n));return{"default":o}}catch(a){throw new Error('Could not read config from meta tag with name "'+s+'".')}}),runningTests?require("offcourse/tests/test-helper"):require("offcourse/app")["default"].create({});